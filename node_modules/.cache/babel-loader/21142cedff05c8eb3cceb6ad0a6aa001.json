{"ast":null,"code":"import { GET_PRODUCTS } from './types';\nimport axios from 'axios';\nconst ROOT_URL = 'https://backendapi.turing.com';\nexport function getProducts() {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      const products = await axios.get(ROOT_URL + '/products');\n      console.log(products); //return dispatch(DVDfilters(filters.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function getDepartments() {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      const departments = await axios.get(ROOT_URL + '/departments');\n      console.log(departments); //return dispatch(DVDfilters(filters.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function getCategories() {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      const categories = await axios.get(ROOT_URL + '/categories');\n      console.log(categories); //return dispatch(DVDfilters(filters.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}","map":{"version":3,"sources":["/Users/josephkoon/Desktop/turing/src/actions/index.js"],"names":["GET_PRODUCTS","axios","ROOT_URL","getProducts","dispatch","products","get","console","log","error","response","data","getDepartments","departments","getCategories","categories"],"mappings":"AAAA,SACCA,YADD,QAEO,SAFP;AAIA,OAAOC,KAAP,MAAkB,OAAlB;AAIA,MAAMC,QAAQ,GAAG,+BAAjB;AAIA,OAAO,SAASC,WAAT,GAAsB;AAC5B;AACA,SAAO,gBAAeC,QAAf,EAAwB;AAC9B,QAAI;AAEH,YAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAUJ,QAAQ,GAAC,WAAnB,CAAvB;AAEAK,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAJG,CAKH;AAEA,KAPD,CAOE,OAAMI,KAAN,EAAY;AACb;AACA,UAAGA,KAAK,CAACC,QAAT,EAAkB;AACjB,YAAGD,KAAK,CAACC,QAAN,CAAeC,IAAlB,EAAuB;AACtBJ,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,SAHgB,CAIlB;;AACC,OALD,MAKO,IAAGC,KAAH,EAAS;AACfF,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA;AACD;AACD,GAnBD;AAoBA;AAID,OAAO,SAASI,cAAT,GAAyB;AAC/B;AACA,SAAO,gBAAeR,QAAf,EAAwB;AAC9B,QAAI;AAEH,YAAMS,WAAW,GAAG,MAAMZ,KAAK,CAACK,GAAN,CAAUJ,QAAQ,GAAC,cAAnB,CAA1B;AAEAK,MAAAA,OAAO,CAACC,GAAR,CAAYK,WAAZ,EAJG,CAKH;AAEA,KAPD,CAOE,OAAMJ,KAAN,EAAY;AACb;AACA,UAAGA,KAAK,CAACC,QAAT,EAAkB;AACjB,YAAGD,KAAK,CAACC,QAAN,CAAeC,IAAlB,EAAuB;AACtBJ,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,SAHgB,CAIlB;;AACC,OALD,MAKO,IAAGC,KAAH,EAAS;AACfF,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA;AACD;AACD,GAnBD;AAoBA;AAKD,OAAO,SAASM,aAAT,GAAwB;AAC9B;AACA,SAAO,gBAAeV,QAAf,EAAwB;AAC9B,QAAI;AAEH,YAAMW,UAAU,GAAG,MAAMd,KAAK,CAACK,GAAN,CAAUJ,QAAQ,GAAC,aAAnB,CAAzB;AAEAK,MAAAA,OAAO,CAACC,GAAR,CAAYO,UAAZ,EAJG,CAKH;AAEA,KAPD,CAOE,OAAMN,KAAN,EAAY;AACb;AACA,UAAGA,KAAK,CAACC,QAAT,EAAkB;AACjB,YAAGD,KAAK,CAACC,QAAN,CAAeC,IAAlB,EAAuB;AACtBJ,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,SAHgB,CAIlB;;AACC,OALD,MAKO,IAAGC,KAAH,EAAS;AACfF,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA;AACD;AACD,GAnBD;AAoBA","sourcesContent":["import {\n\tGET_PRODUCTS\n} from './types'\n\nimport axios from 'axios';\n\n\n\nconst ROOT_URL = 'https://backendapi.turing.com'\n\n\n\nexport function getProducts(){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tconst products = await axios.get(ROOT_URL+'/products');\n\n\t\t\tconsole.log(products)\n\t\t\t//return dispatch(DVDfilters(filters.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\n\n\nexport function getDepartments(){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\t\t\t\n\t\t\tconst departments = await axios.get(ROOT_URL+'/departments');\n\n\t\t\tconsole.log(departments)\n\t\t\t//return dispatch(DVDfilters(filters.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\n\n\n\nexport function getCategories(){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\t\t\t\n\t\t\tconst categories = await axios.get(ROOT_URL+'/categories');\n\n\t\t\tconsole.log(categories)\n\t\t\t//return dispatch(DVDfilters(filters.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}