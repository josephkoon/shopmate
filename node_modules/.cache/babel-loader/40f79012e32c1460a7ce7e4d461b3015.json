{"ast":null,"code":"import { GET_PRODUCTS, GET_PRODUCT, SEARCH_PRODUCTS, GET_CATEGORIES, GET_DEPARTMENTS } from './types';\nimport axios from 'axios';\nconst ROOT_URL = 'https://backendapi.turing.com';\nexport function getProducts() {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      //page - defauls to 1\n      //limit - defaults to 20\n      //description_length - defaults to 200\n      const products = await axios.get(ROOT_URL + '/products');\n      let count = products.data.count;\n      let rows = products.data.rows;\n      return dispatch(get_Products(rows));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function getProductsInDepartment(id) {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      //page - defauls to 1\n      //limit - defaults to 20\n      //description_length - defaults to 200\n      const products = await axios.get(ROOT_URL + '/products/inDepartment/' + id);\n      let count = products.data.count;\n      let rows = products.data.rows;\n      return dispatch(get_Products(rows));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function getProductsInCategory(id) {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      //page - defauls to 1\n      //limit - defaults to 20\n      //description_length - defaults to 200\n      const products = await axios.get(ROOT_URL + '/products/inCategory/' + id);\n      let count = products.data.count;\n      let rows = products.data.rows;\n      return dispatch(get_Products(rows));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function get_Products(products) {\n  return {\n    type: GET_PRODUCTS,\n    payload: products\n  };\n}\nexport function getProduct(id) {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      const product = await axios.get(ROOT_URL + '/products/' + id);\n      console.log('product', product);\n      return dispatch(get_Product(product.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function get_Product(product) {\n  return {\n    type: GET_PRODUCT,\n    payload: product\n  };\n}\nexport function searchProducts(query) {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      //query_string - to search\n      //all_words - all words on/off\n      //page - defauls to 1\n      //limit - defaults to 20\n      //description_length - defaults to 200\n      const products = await axios.get(ROOT_URL + '/products/search' + \"?query_string=\" + query);\n      return dispatch(search_Products(products.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function search_Products(products) {\n  return {\n    type: SEARCH_PRODUCTS,\n    payload: products\n  };\n}\nexport function getCategories() {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      //order - category_id or name\n      //page - defauls to 1\n      //limit - defaults to 20\n      const categories = await axios.get(ROOT_URL + '/categories');\n      let count = categories.data.count;\n      let rows = categories.data.rows;\n      return dispatch(get_Categories(rows));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function getCategoriesInDepartment(id) {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      const categories = await axios.get(ROOT_URL + '/categories/inDepartment/' + id);\n      return dispatch(get_Categories(categories.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function get_Categories(categories) {\n  return {\n    type: GET_CATEGORIES,\n    payload: categories\n  };\n}\nexport function getDepartments() {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      const departments = await axios.get(ROOT_URL + '/departments');\n      return dispatch(get_Departments(departments.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function get_Departments(departments) {\n  console.log('departments', departments);\n  return {\n    type: GET_DEPARTMENTS,\n    payload: departments\n  };\n}","map":{"version":3,"sources":["/Users/josephkoon/Desktop/turing/src/actions/index.js"],"names":["GET_PRODUCTS","GET_PRODUCT","SEARCH_PRODUCTS","GET_CATEGORIES","GET_DEPARTMENTS","axios","ROOT_URL","getProducts","dispatch","products","get","count","data","rows","get_Products","error","response","console","log","getProductsInDepartment","id","getProductsInCategory","type","payload","getProduct","product","get_Product","searchProducts","query","search_Products","getCategories","categories","get_Categories","getCategoriesInDepartment","getDepartments","departments","get_Departments"],"mappings":"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","sourcesContent":["import {\n\tGET_PRODUCTS,\n\tGET_PRODUCT,\n\tSEARCH_PRODUCTS,\n\n\tGET_CATEGORIES,\n\n\tGET_DEPARTMENTS,\n} from './types'\n\n\nimport axios from 'axios';\n\nconst ROOT_URL = 'https://backendapi.turing.com'\n\n\n\n\n\nexport function getProducts(){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\t//page - defauls to 1\n\t\t\t//limit - defaults to 20\n\t\t\t//description_length - defaults to 200\n\n\t\t\tconst products = await axios.get(ROOT_URL+'/products');\n\n\t\t\tlet count = products.data.count\n\t\t\tlet rows = products.data.rows\n\n\t\t\treturn dispatch(get_Products(rows));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\n\n\n\nexport function getProductsInDepartment(id){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\t//page - defauls to 1\n\t\t\t//limit - defaults to 20\n\t\t\t//description_length - defaults to 200\n\n\t\t\tconst products = await axios.get(ROOT_URL+'/products/inDepartment/'+id);\n\n\t\t\tlet count = products.data.count\n\t\t\tlet rows = products.data.rows\n\n\t\t\treturn dispatch(get_Products(rows));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\n\n\nexport function getProductsInCategory(id){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\t//page - defauls to 1\n\t\t\t//limit - defaults to 20\n\t\t\t//description_length - defaults to 200\n\n\t\t\tconst products = await axios.get(ROOT_URL+'/products/inCategory/'+id);\n\n\t\t\tlet count = products.data.count\n\t\t\tlet rows = products.data.rows\n\n\t\t\treturn dispatch(get_Products(rows));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\n\n\n\n\nexport function get_Products(products){\n\treturn {\n\t\ttype:GET_PRODUCTS,\n\t\tpayload:products\n\t};\n}\n\n\n\n\n\n\n\n\nexport function getProduct(id){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tconst product = await axios.get(ROOT_URL+'/products/'+id);\n\n\t\t\tconsole.log('product', product)\n\n\t\t\treturn dispatch(get_Product(product.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport function get_Product(product){\n\treturn {\n\t\ttype:GET_PRODUCT,\n\t\tpayload:product\n\t};\n}\n\n\n\n\n\n\n\n\nexport function searchProducts(query){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\t//query_string - to search\n\t\t\t//all_words - all words on/off\n\t\t\t//page - defauls to 1\n\t\t\t//limit - defaults to 20\n\t\t\t//description_length - defaults to 200\n\n\t\t\tconst products = await axios.get(ROOT_URL+'/products/search' + \"?query_string=\" + query);\n\n\t\t\treturn dispatch(search_Products(products.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport function search_Products(products){\n\treturn {\n\t\ttype:SEARCH_PRODUCTS,\n\t\tpayload:products\n\t};\n}\n\n\n\n\n\n\n\n\nexport function getCategories(){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\t//order - category_id or name\n\t\t\t//page - defauls to 1\n\t\t\t//limit - defaults to 20\n\n\t\t\tconst categories = await axios.get(ROOT_URL+'/categories');\n\n\t\t\tlet count = categories.data.count\n\t\t\tlet rows = categories.data.rows\n\n\t\t\treturn dispatch(get_Categories(rows));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\n\nexport function getCategoriesInDepartment(id){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tconst categories = await axios.get(ROOT_URL+'/categories/inDepartment/'+id);\n\n\t\t\treturn dispatch(get_Categories(categories.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\n\nexport function get_Categories(categories){\n\treturn {\n\t\ttype:GET_CATEGORIES,\n\t\tpayload:categories\n\t};\n}\n\n\n\n\n\n\n\n\n\n\nexport function getDepartments(){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tconst departments = await axios.get(ROOT_URL+'/departments');\n\n\t\t\treturn dispatch(get_Departments(departments.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport function get_Departments(departments){\n\tconsole.log('departments', departments)\n\treturn {\n\t\ttype:GET_DEPARTMENTS,\n\t\tpayload:departments\n\t};\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}