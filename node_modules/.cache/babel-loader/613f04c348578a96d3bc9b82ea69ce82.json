{"ast":null,"code":"var _jsxFileName = \"/Users/josephkoon/Desktop/turing/src/CheckoutForm.js\";\n// CheckoutForm.js\nimport React from 'react';\nimport { injectStripe } from 'react-stripe-elements'; // import AddressSection from './AddressSection';\n// import CardSection from './CardSection';\n\nimport { CardElement } from 'react-stripe-elements';\n\nclass CheckoutForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = ev => {\n      // We don't want to let default form submission happen here, which would refresh the page.\n      ev.preventDefault();\n      let data = 'test'; // Within the context of `Elements`, this call to createPaymentMethod knows from which Element to\n      // create the PaymentMethod, since there's only one in this group.\n      // See our createPaymentMethod documentation for more:\n      // https://stripe.com/docs/stripe-js/reference#stripe-create-payment-method\n      // this.props.stripe\n      //   .createPaymentMethod('card', {billing_details: {name: 'Jenny Rosen'}})\n      //   .then(({paymentMethod}) => {\n      //     console.log('Received Stripe PaymentMethod:', paymentMethod);\n      //   });\n      // You can also use handleCardPayment with the Payment Intents API automatic confirmation flow.\n      // See our handleCardPayment documentation for more:\n      // https://stripe.com/docs/stripe-js/reference#stripe-handle-card-payment\n      //this.props.stripe.handleCardPayment('{PAYMENT_INTENT_CLIENT_SECRET}', data);\n      // You can also use createToken to create tokens.\n      // See our tokens documentation for more:\n      // https://stripe.com/docs/stripe-js/reference#stripe-create-token\n      //this.props.stripe.createToken({type: 'card', name: 'Jenny Rosen'}).then();\n\n      this.props.stripe.createToken({\n        type: 'card',\n        name: 'Jenny Rosen'\n      }).then(function (result) {\n        if (result.error) {// Inform the customer that there was an error.\n          //var errorElement = document.getElementById('card-errors');\n          //errorElement.textContent = result.error.message;\n        } else {\n          console.log('TOKEN', result.token); // Send the token to your server.\n          //stripeTokenHandler(result.token);\n        }\n      }); // token type can optionally be inferred if there is only one Element\n      // with which to create tokens\n      // this.props.stripe.createToken({name: 'Jenny Rosen'});\n      // You can also use createSource to create Sources.\n      // See our Sources documentation for more:\n      // https://stripe.com/docs/stripe-js/reference#stripe-create-source\n\n      this.props.stripe.createSource({\n        type: 'card',\n        owner: {\n          name: 'Jenny Rosen'\n        }\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(CardElement, {\n      style: {\n        base: {\n          fontSize: '18px'\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Confirm order\"));\n  }\n\n}\n\nexport default injectStripe(CheckoutForm);","map":{"version":3,"sources":["/Users/josephkoon/Desktop/turing/src/CheckoutForm.js"],"names":["React","injectStripe","CardElement","CheckoutForm","Component","handleSubmit","ev","preventDefault","data","props","stripe","createToken","type","name","then","result","error","console","log","token","createSource","owner","render","base","fontSize"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,YAAR,QAA2B,uBAA3B,C,CAEA;AACA;;AAEA,SAAQC,WAAR,QAA0B,uBAA1B;;AAGA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AAAA;AAAA;;AAAA,SACzCC,YADyC,GACzBC,EAAD,IAAQ;AACrB;AACAA,MAAAA,EAAE,CAACC,cAAH;AAEA,UAAIC,IAAI,GAAG,MAAX,CAJqB,CAMrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAGA,WAAKC,KAAL,CAAWC,MAAX,CAAkBC,WAAlB,CAA8B;AAACC,QAAAA,IAAI,EAAE,MAAP;AAAeC,QAAAA,IAAI,EAAE;AAArB,OAA9B,EAAmEC,IAAnE,CAAwE,UAASC,MAAT,EAAiB;AACvF,YAAIA,MAAM,CAACC,KAAX,EAAkB,CAChB;AACA;AACA;AACD,SAJD,MAIO;AACLC,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,MAAM,CAACI,KAA5B,EADK,CAEL;AACA;AACD;AACF,OAVD,EA3BqB,CAuCrB;AACA;AACA;AAEA;AACA;AACA;;AACA,WAAKV,KAAL,CAAWC,MAAX,CAAkBU,YAAlB,CAA+B;AAC7BR,QAAAA,IAAI,EAAE,MADuB;AAE7BS,QAAAA,KAAK,EAAE;AACLR,UAAAA,IAAI,EAAE;AADD;AAFsB,OAA/B;AAMD,KArDwC;AAAA;;AAuDzCS,EAAAA,MAAM,GAAG;AACP,WACE;AAAM,MAAA,QAAQ,EAAE,KAAKjB,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAE;AAACkB,QAAAA,IAAI,EAAE;AAACC,UAAAA,QAAQ,EAAE;AAAX;AAAP,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,CADF;AAMD;;AA9DwC;;AAiE3C,eAAevB,YAAY,CAACE,YAAD,CAA3B","sourcesContent":["// CheckoutForm.js\nimport React from 'react';\nimport {injectStripe} from 'react-stripe-elements';\n\n// import AddressSection from './AddressSection';\n// import CardSection from './CardSection';\n\nimport {CardElement} from 'react-stripe-elements';\n\n\nclass CheckoutForm extends React.Component {\n  handleSubmit = (ev) => {\n    // We don't want to let default form submission happen here, which would refresh the page.\n    ev.preventDefault();\n\n    let data = 'test'\n\n    // Within the context of `Elements`, this call to createPaymentMethod knows from which Element to\n    // create the PaymentMethod, since there's only one in this group.\n    // See our createPaymentMethod documentation for more:\n    // https://stripe.com/docs/stripe-js/reference#stripe-create-payment-method\n    // this.props.stripe\n    //   .createPaymentMethod('card', {billing_details: {name: 'Jenny Rosen'}})\n    //   .then(({paymentMethod}) => {\n    //     console.log('Received Stripe PaymentMethod:', paymentMethod);\n    //   });\n\n    // You can also use handleCardPayment with the Payment Intents API automatic confirmation flow.\n    // See our handleCardPayment documentation for more:\n    // https://stripe.com/docs/stripe-js/reference#stripe-handle-card-payment\n    //this.props.stripe.handleCardPayment('{PAYMENT_INTENT_CLIENT_SECRET}', data);\n\n    // You can also use createToken to create tokens.\n    // See our tokens documentation for more:\n    // https://stripe.com/docs/stripe-js/reference#stripe-create-token\n    //this.props.stripe.createToken({type: 'card', name: 'Jenny Rosen'}).then();\n\n\n    this.props.stripe.createToken({type: 'card', name: 'Jenny Rosen'}).then(function(result) {\n      if (result.error) {\n        // Inform the customer that there was an error.\n        //var errorElement = document.getElementById('card-errors');\n        //errorElement.textContent = result.error.message;\n      } else {\n        console.log('TOKEN', result.token)\n        // Send the token to your server.\n        //stripeTokenHandler(result.token);\n      }\n    });\n\n    // token type can optionally be inferred if there is only one Element\n    // with which to create tokens\n    // this.props.stripe.createToken({name: 'Jenny Rosen'});\n\n    // You can also use createSource to create Sources.\n    // See our Sources documentation for more:\n    // https://stripe.com/docs/stripe-js/reference#stripe-create-source\n    this.props.stripe.createSource({\n      type: 'card',\n      owner: {\n        name: 'Jenny Rosen',\n      },\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <CardElement style={{base: {fontSize: '18px'}}} />\n        <button>Confirm order</button>\n      </form>\n    );\n  }\n}\n\nexport default injectStripe(CheckoutForm);\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}