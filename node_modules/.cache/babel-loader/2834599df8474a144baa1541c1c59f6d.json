{"ast":null,"code":"var _jsxFileName = \"/Users/josephkoon/Desktop/turing/src/Checkout.js\";\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { getShippingRegions, getShippingOptions } from './actions/index';\n\nclass Checkout extends Component {\n  constructor() {\n    super();\n    this.state = {\n      selectedRegion: ''\n    };\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n    this.props.getShippingRegions();\n  }\n\n  getShippingOptions(e) {\n    //console.log(e.target.value)\n    let value = e.target.value;\n    let region_id;\n    let regions = this.props.regions;\n\n    for (let i = 0; i < regions.length; i++) {\n      if (regions[i].shipping_region == value) {\n        region_id = regions[i].shipping_region_id;\n      }\n    }\n\n    console.log('selected id', region_id); //this.setState({selectedRegion:e.target.value})\n  }\n\n  render() {\n    let regions;\n\n    if (this.props.regions.length > 0) {\n      regions = this.props.regions.map(region => {\n        return React.createElement(\"option\", {\n          key: region.region_shipping_id,\n          className: \"dropdown-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, region.shipping_region);\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      onChange: this.getShippingOptions,\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, regions));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    regions: state.orders.regions,\n    options: state.orders.options\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getShippingRegions: getShippingRegions,\n    getShippingOptions: getShippingOptions\n  }, dispatch);\n};\n\nCheckout = connect(mapStateToProps, mapDispatchToProps)(Checkout);\nexport default withRouter(Checkout);","map":{"version":3,"sources":["/Users/josephkoon/Desktop/turing/src/Checkout.js"],"names":["React","Component","bindActionCreators","connect","withRouter","getShippingRegions","getShippingOptions","Checkout","constructor","state","selectedRegion","componentDidMount","window","scrollTo","props","e","value","target","region_id","regions","i","length","shipping_region","shipping_region_id","console","log","render","map","region","region_shipping_id","mapStateToProps","orders","options","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,SACCC,kBADD,EAECC,kBAFD,QAGO,iBAHP;;AAOA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAChCO,EAAAA,WAAW,GAAE;AACZ;AAEA,SAAKC,KAAL,GAAa;AACZC,MAAAA,cAAc,EAAC;AADH,KAAb;AAIA;;AAGDC,EAAAA,iBAAiB,GAAE;AAClBC,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AAEA,SAAKC,KAAL,CAAWT,kBAAX;AACA;;AAIDC,EAAAA,kBAAkB,CAACS,CAAD,EAAG;AAEpB;AACA,QAAIC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAArB;AAEA,QAAIE,SAAJ;AACA,QAAIC,OAAO,GAAG,KAAKL,KAAL,CAAWK,OAAzB;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACD,OAAO,CAACE,MAAvB,EAA+BD,CAAC,EAAhC,EAAmC;AAClC,UAAGD,OAAO,CAACC,CAAD,CAAP,CAAWE,eAAX,IAA8BN,KAAjC,EAAuC;AACtCE,QAAAA,SAAS,GAAGC,OAAO,CAACC,CAAD,CAAP,CAAWG,kBAAvB;AACA;AACD;;AAGDC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BP,SAA3B,EAdoB,CAepB;AAGA;;AAIDQ,EAAAA,MAAM,GAAE;AAEP,QAAIP,OAAJ;;AAEA,QAAG,KAAKL,KAAL,CAAWK,OAAX,CAAmBE,MAAnB,GAA4B,CAA/B,EAAiC;AAEhCF,MAAAA,OAAO,GAAG,KAAKL,KAAL,CAAWK,OAAX,CAAmBQ,GAAnB,CAAuBC,MAAM,IAAI;AAC1C,eACC;AAAQ,UAAA,GAAG,EAAEA,MAAM,CAACC,kBAApB;AAAwC,UAAA,SAAS,EAAC,eAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAmED,MAAM,CAACN,eAA1E,CADD;AAGA,OAJS,CAAV;AAMA;;AAID,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGH;AAAQ,MAAA,QAAQ,EAAE,KAAKhB,kBAAvB;AAA2C,MAAA,SAAS,EAAC,cAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEa,OADF,CAHG,CADJ;AAgBA;;AAzE+B;;AA6EjC,SAASW,eAAT,CAAyBrB,KAAzB,EAA+B;AAC9B,SAAO;AACNU,IAAAA,OAAO,EAACV,KAAK,CAACsB,MAAN,CAAaZ,OADf;AAENa,IAAAA,OAAO,EAACvB,KAAK,CAACsB,MAAN,CAAaC;AAFf,GAAP;AAIA;;AAED,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACxC,SAAOhC,kBAAkB,CAAC;AACzBG,IAAAA,kBAAkB,EAACA,kBADM;AAEzBC,IAAAA,kBAAkB,EAACA;AAFM,GAAD,EAGtB4B,QAHsB,CAAzB;AAIA,CALD;;AAOA3B,QAAQ,GAAGJ,OAAO,CAAC2B,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C1B,QAA7C,CAAX;AACA,eAAeH,UAAU,CAACG,QAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux'; \nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport { \n\tgetShippingRegions,\n\tgetShippingOptions,\n} from './actions/index';\n\n\n\nclass Checkout extends Component {\n\tconstructor(){\n\t\tsuper()\n\n\t\tthis.state = {\n\t\t\tselectedRegion:''\n\t\t}\n\n\t}\n\n\n\tcomponentDidMount(){\n\t\twindow.scrollTo(0, 0)\n\n\t\tthis.props.getShippingRegions()\n\t}\n\n\n\n\tgetShippingOptions(e){\n\t\t\n\t\t//console.log(e.target.value)\n\t\tlet value = e.target.value\n\n\t\tlet region_id\n\t\tlet regions = this.props.regions\n\t\tfor(let i=0; i<regions.length; i++){\n\t\t\tif(regions[i].shipping_region == value){\n\t\t\t\tregion_id = regions[i].shipping_region_id\n\t\t\t}\n\t\t}\n\n\n\t\tconsole.log('selected id', region_id)\n\t\t//this.setState({selectedRegion:e.target.value})\n\n\n\t}\n\n\n\n\trender(){\n\n\t\tlet regions\n\n\t\tif(this.props.regions.length > 0){\n\n\t\t\tregions = this.props.regions.map(region => {\n\t\t\t\treturn (\n\t\t\t\t\t<option key={region.region_shipping_id} className=\"dropdown-item\">{region.shipping_region}</option>\n\t\t\t\t)\n\t\t\t})\n\n\t\t}\n\n\n\n\t\treturn(\n\t\t    <div>\n\t\n\n\t\t\t<select onChange={this.getShippingOptions} className=\"form-control\">\n\t\t\t\t{regions}\n\t\t\t</select>\n\n\n\n\n\n\n\n\t\t    </div>\n\t\t)\n\t}\n}\n\n\nfunction mapStateToProps(state){\n\treturn { \t\n\t\tregions:state.orders.regions,\n\t\toptions:state.orders.options,\n\t};\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn bindActionCreators({\n\t\tgetShippingRegions:getShippingRegions,\n\t\tgetShippingOptions:getShippingOptions,\n\t}, dispatch);\n};\n\nCheckout = connect(mapStateToProps, mapDispatchToProps)(Checkout);\nexport default withRouter(Checkout);\n"]},"metadata":{},"sourceType":"module"}