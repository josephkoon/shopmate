{"ast":null,"code":"var _jsxFileName = \"/Users/josephkoon/Desktop/turing/src/Checkout.js\";\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { getShippingRegions, getShippingOptions } from './actions/index';\n\nclass Checkout extends Component {\n  constructor() {\n    super();\n    this.state = {\n      selectedRegion: ''\n    };\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n    this.props.getShippingRegions();\n  }\n\n  getShippingOptions(e) {\n    let value = e.target.value;\n    console.log('value', value); // let region_id\n    // let regions = this.props.regions\n    // for(let i=0; i<regions.length; i++){\n    // \tif(regions[i].shipping_region == value){\n    // \t\tregion_id = regions[i].shipping_region_id\n    // \t}\n    // }\n    // this.props.getShippingOptions(region_id)\n    // this.setState({selectedRegion:value});\n  }\n\n  selectShippingOptions(e) {\n    let value = e.target.value;\n    console.log(value);\n  }\n\n  render() {\n    let regions = [];\n    let options = [];\n\n    if (this.props.regions.length > 0) {\n      regions = this.props.regions.map(region => {\n        console.log('region', region);\n        return React.createElement(\"option\", {\n          key: region.shipping_region_id,\n          value: region.shipping_region_id,\n          className: \"dropdown-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, region.shipping_region);\n      });\n    }\n\n    if (this.props.options.length > 0) {\n      options = this.props.options.map(option => {\n        console.log(option);\n        return React.createElement(\"option\", {\n          key: option.shipping_id,\n          className: \"dropdown-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, option.shipping_type, \" - \", option.shipping_cost);\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        padding: '15px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"light-gray\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Select Shipping Region\"), React.createElement(\"select\", {\n      value: this.state.selectedRegion,\n      onChange: this.getShippingOptions.bind(this),\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, regions)), React.createElement(\"div\", {\n      style: {\n        padding: '15px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"light-gray\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Select Shipping Option\"), React.createElement(\"select\", {\n      value: this.state.selectedOption,\n      onChange: this.selectShippingOptions.bind(this),\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, options)));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    regions: state.orders.regions,\n    options: state.orders.options\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getShippingRegions: getShippingRegions,\n    getShippingOptions: getShippingOptions\n  }, dispatch);\n};\n\nCheckout = connect(mapStateToProps, mapDispatchToProps)(Checkout);\nexport default withRouter(Checkout);","map":{"version":3,"sources":["/Users/josephkoon/Desktop/turing/src/Checkout.js"],"names":["React","Component","bindActionCreators","connect","withRouter","getShippingRegions","getShippingOptions","Checkout","constructor","state","selectedRegion","componentDidMount","window","scrollTo","props","e","value","target","console","log","selectShippingOptions","render","regions","options","length","map","region","shipping_region_id","shipping_region","option","shipping_id","shipping_type","shipping_cost","padding","bind","selectedOption","mapStateToProps","orders","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux'; \nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport { \n\tgetShippingRegions,\n\tgetShippingOptions,\n} from './actions/index';\n\n\n\nclass Checkout extends Component {\n\tconstructor(){\n\t\tsuper()\n\n\t\tthis.state = {\n\t\t\tselectedRegion:''\n\t\t}\n\n\t}\n\n\n\tcomponentDidMount(){\n\t\twindow.scrollTo(0, 0)\n\n\t\tthis.props.getShippingRegions()\n\t}\n\n\n\n\tgetShippingOptions(e){\n\t\tlet value = e.target.value\n\t\tconsole.log('value', value)\n\n\t\t// let region_id\n\t\t// let regions = this.props.regions\n\t\t// for(let i=0; i<regions.length; i++){\n\t\t// \tif(regions[i].shipping_region == value){\n\t\t// \t\tregion_id = regions[i].shipping_region_id\n\t\t// \t}\n\t\t// }\n\n\t\t// this.props.getShippingOptions(region_id)\n\n\t\t// this.setState({selectedRegion:value});\n\t}\n\n\n\n\tselectShippingOptions(e){\n\t\tlet value = e.target.value\n\n\t\tconsole.log(value)\n\t}\n\n\n\n\trender(){\n\n\t\tlet regions = []\n\t\tlet options = []\n\n\t\tif(this.props.regions.length > 0){\n\t\t\tregions = this.props.regions.map(region => {\n\t\t\t\tconsole.log('region', region)\n\t\t\t\treturn (\n\t\t\t\t\t<option key={region.shipping_region_id} value={region.shipping_region_id} className=\"dropdown-item\">{region.shipping_region}</option>\n\t\t\t\t)\n\t\t\t})\n\t\t}\n\n\n\t\tif(this.props.options.length > 0){\n\t\t\toptions = this.props.options.map(option => {\n\t\t\t\tconsole.log(option)\n\t\t\t\treturn (\n\t\t\t\t\t<option key={option.shipping_id} className=\"dropdown-item\">{option.shipping_type} - {option.shipping_cost}</option>\n\t\t\t\t)\n\t\t\t})\n\t\t}\n\n\n\n\t\treturn(\n\t\t    <div>\n\t\n\t\t\t    <div style={{padding:'15px'}}>\n\t\t\t\t    <h3 className='light-gray'>Select Shipping Region</h3>\n\t\t\t\t\t<select value={this.state.selectedRegion} onChange={this.getShippingOptions.bind(this)} className=\"form-control\">\n\t\t\t\t\t\t{regions}\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\n\n\t\t\t    <div style={{padding:'15px'}}>\n\t\t\t\t    <h3 className='light-gray'>Select Shipping Option</h3>\n\t\t\t\t\t<select value={this.state.selectedOption} onChange={this.selectShippingOptions.bind(this)} className=\"form-control\">\n\t\t\t\t\t\t{options}\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\n\t\t    </div>\n\t\t)\n\t}\n}\n\n\nfunction mapStateToProps(state){\n\treturn { \t\n\t\tregions:state.orders.regions,\n\t\toptions:state.orders.options,\n\t};\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn bindActionCreators({\n\t\tgetShippingRegions:getShippingRegions,\n\t\tgetShippingOptions:getShippingOptions,\n\t}, dispatch);\n};\n\nCheckout = connect(mapStateToProps, mapDispatchToProps)(Checkout);\nexport default withRouter(Checkout);\n"]},"metadata":{},"sourceType":"module"}