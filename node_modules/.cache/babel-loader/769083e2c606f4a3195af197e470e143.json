{"ast":null,"code":"var _jsxFileName = \"/Users/josephkoon/Desktop/turing/src/components/FilterCategory.js\";\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { getProductsInCategory } from '../actions/index';\n\nclass FilterCategory extends Component {\n  updateProducts(id) {\n    this.props.getProductsInCategory(id);\n  }\n\n  render() {\n    let categoryLabels;\n\n    if (this.props.categories.length > 0) {\n      categoryLabels = this.props.categories.map(category => {\n        return React.createElement(\"div\", {\n          key: category.category_id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          onClick: () => this.updateProducts(category.category_id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, category.name));\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"bottom-shadow\",\n      style: {\n        backgroundColor: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        padding: '15px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, categoryLabels));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    categories: state.categories.categories\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getProductsInCategory: getProductsInCategory\n  }, dispatch);\n};\n\nFilterCategory = connect(mapStateToProps, mapDispatchToProps)(FilterCategory);\nexport default withRouter(FilterCategory);","map":{"version":3,"sources":["/Users/josephkoon/Desktop/turing/src/components/FilterCategory.js"],"names":["React","Component","bindActionCreators","connect","withRouter","getProductsInCategory","FilterCategory","updateProducts","id","props","render","categoryLabels","categories","length","map","category","category_id","name","backgroundColor","padding","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,SACCC,qBADD,QAEO,kBAFP;;AAKA,MAAMC,cAAN,SAA6BL,SAA7B,CAAuC;AAGtCM,EAAAA,cAAc,CAACC,EAAD,EAAI;AACjB,SAAKC,KAAL,CAAWJ,qBAAX,CAAiCG,EAAjC;AACA;;AAEDE,EAAAA,MAAM,GAAE;AAEP,QAAIC,cAAJ;;AAEA,QAAG,KAAKF,KAAL,CAAWG,UAAX,CAAsBC,MAAtB,GAA+B,CAAlC,EAAoC;AACnCF,MAAAA,cAAc,GAAG,KAAKF,KAAL,CAAWG,UAAX,CAAsBE,GAAtB,CAA0BC,QAAQ,IAAI;AACtD,eACC;AAAK,UAAA,GAAG,EAAEA,QAAQ,CAACC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC;AAAI,UAAA,OAAO,EAAE,MAAM,KAAKT,cAAL,CAAoBQ,QAAQ,CAACC,WAA7B,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAgED,QAAQ,CAACE,IAAzE,CADD,CADD;AAKA,OANgB,CAAjB;AAOA;;AAED,WACK;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,KAAK,EAAE;AAACC,QAAAA,eAAe,EAAC;AAAjB,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEC;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAC;AAAT,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACER,cADF,CAFD,CADL;AASA;;AA9BqC;;AAqCvC,SAASS,eAAT,CAAyBC,KAAzB,EAA+B;AAC9B,SAAO;AACNT,IAAAA,UAAU,EAACS,KAAK,CAACT,UAAN,CAAiBA;AADtB,GAAP;AAGA;;AAED,MAAMU,kBAAkB,GAAIC,QAAD,IAAc;AACxC,SAAOrB,kBAAkB,CAAC;AACzBG,IAAAA,qBAAqB,EAACA;AADG,GAAD,EAEtBkB,QAFsB,CAAzB;AAGA,CAJD;;AAMAjB,cAAc,GAAGH,OAAO,CAACiB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ChB,cAA7C,CAAjB;AACA,eAAeF,UAAU,CAACE,cAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux'; \nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport { \n\tgetProductsInCategory\n} from '../actions/index';\n\n\nclass FilterCategory extends Component {\n\n\n\tupdateProducts(id){\n\t\tthis.props.getProductsInCategory(id)\n\t}\n\n\trender(){\n\n\t\tlet categoryLabels\n\n\t\tif(this.props.categories.length > 0){\n\t\t\tcategoryLabels = this.props.categories.map(category => {\n\t\t\t\treturn (\n\t\t\t\t\t<div key={category.category_id}>\n\t\t\t\t\t\t<h3 onClick={() => this.updateProducts(category.category_id)} >{category.name}</h3>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t})\n\t\t}\n\n\t\treturn(\n\t     \t<div className='bottom-shadow' style={{backgroundColor:'white'}}>\n\n\t     \t\t<div style={{padding:'15px'}}>\n\t     \t\t\t{categoryLabels}\n\t     \t\t</div>\n\n\t     \t</div>\n\t\t);\n\t}\n}\n\n\n\n\n\nfunction mapStateToProps(state){\n\treturn { \n\t\tcategories:state.categories.categories\n\t};\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn bindActionCreators({\n\t\tgetProductsInCategory:getProductsInCategory\n\t}, dispatch);\n};\n\nFilterCategory = connect(mapStateToProps, mapDispatchToProps)(FilterCategory);\nexport default withRouter(FilterCategory);\n\n\n"]},"metadata":{},"sourceType":"module"}