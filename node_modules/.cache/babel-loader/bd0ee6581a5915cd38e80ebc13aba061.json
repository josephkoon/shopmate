{"ast":null,"code":"import _objectSpread from \"/Users/josephkoon/Desktop/turing/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { SETUP_CART, GET_CART, GET_CART_TOTAL, EMPTY_CART, UPDATE_CART } from '../actions/types';\nexport default function (state = {\n  cart_id: null,\n  cart: [],\n  total: null\n}, action) {\n  switch (action.type) {\n    case SETUP_CART:\n      return _objectSpread({}, state, {\n        cart_id: action.payload\n      });\n\n    case GET_CART:\n      return _objectSpread({}, state, {\n        cart: action.payload\n      });\n\n    case GET_CART_TOTAL:\n      return _objectSpread({}, state, {\n        total: action.payload\n      });\n\n    case EMPTY_CART:\n      return _objectSpread({}, state, {\n        cart: []\n      });\n\n    case UPDATE_CART:\n      let updatedCart = [];\n      let hash = {};\n      let updateCart = action.payload;\n      let existingCart = state.cart;\n\n      for (let i = 0; i < existingCart.length; i++) {\n        let item = Object.assign({}, existingCart[i]);\n        hash[item.item_id] = item;\n      }\n\n      for (let i = 0; i < updateCart.length; i++) {\n        let item = updateCart[i];\n\n        if (hash[item.item_id]) {\n          item.image = hash[item.item_id].image || '';\n        }\n\n        updatedCart.push(item);\n      }\n\n      return _objectSpread({}, state, {\n        cart: updatedCart\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/josephkoon/Desktop/turing/src/reducers/cart_reducer.js"],"names":["SETUP_CART","GET_CART","GET_CART_TOTAL","EMPTY_CART","UPDATE_CART","state","cart_id","cart","total","action","type","payload","updatedCart","hash","updateCart","existingCart","i","length","item","Object","assign","item_id","image","push"],"mappings":";AAAA,SACCA,UADD,EAECC,QAFD,EAGCC,cAHD,EAICC,UAJD,EAKCC,WALD,QAMO,kBANP;AASA,eAAe,UAASC,KAAK,GAAC;AAACC,EAAAA,OAAO,EAAC,IAAT;AAAeC,EAAAA,IAAI,EAAC,EAApB;AAAwBC,EAAAA,KAAK,EAAC;AAA9B,CAAf,EAAoDC,MAApD,EAA2D;AACzE,UAAOA,MAAM,CAACC,IAAd;AAGA,SAAKV,UAAL;AACC,+BAAWK,KAAX;AAAkBC,QAAAA,OAAO,EAACG,MAAM,CAACE;AAAjC;;AAED,SAAKV,QAAL;AACC,+BAAWI,KAAX;AAAkBE,QAAAA,IAAI,EAACE,MAAM,CAACE;AAA9B;;AAED,SAAKT,cAAL;AACC,+BAAWG,KAAX;AAAkBG,QAAAA,KAAK,EAACC,MAAM,CAACE;AAA/B;;AAED,SAAKR,UAAL;AACC,+BAAWE,KAAX;AAAkBE,QAAAA,IAAI,EAAC;AAAvB;;AAGD,SAAKH,WAAL;AACC,UAAIQ,WAAW,GAAG,EAAlB;AACA,UAAIC,IAAI,GAAG,EAAX;AAEA,UAAIC,UAAU,GAAGL,MAAM,CAACE,OAAxB;AACA,UAAII,YAAY,GAAGV,KAAK,CAACE,IAAzB;;AAEA,WAAI,IAAIS,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACD,YAAY,CAACE,MAA5B,EAAoCD,CAAC,EAArC,EAAwC;AACvC,YAAIE,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,YAAY,CAACC,CAAD,CAA9B,CAAX;AACAH,QAAAA,IAAI,CAACK,IAAI,CAACG,OAAN,CAAJ,GAAqBH,IAArB;AACA;;AAED,WAAI,IAAIF,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACF,UAAU,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAsC;AACrC,YAAIE,IAAI,GAAGJ,UAAU,CAACE,CAAD,CAArB;;AACA,YAAGH,IAAI,CAACK,IAAI,CAACG,OAAN,CAAP,EAAsB;AACrBH,UAAAA,IAAI,CAACI,KAAL,GAAaT,IAAI,CAACK,IAAI,CAACG,OAAN,CAAJ,CAAmBC,KAAnB,IAA4B,EAAzC;AACA;;AACDV,QAAAA,WAAW,CAACW,IAAZ,CAAiBL,IAAjB;AACA;;AAED,+BAAWb,KAAX;AAAkBE,QAAAA,IAAI,EAACK;AAAvB;;AAKD;AACC,aAAOP,KAAP;AA1CD;AA4CA","sourcesContent":["import {\n\tSETUP_CART,\n\tGET_CART,\n\tGET_CART_TOTAL,\n\tEMPTY_CART,\n\tUPDATE_CART,\n} from '../actions/types';\n\n\nexport default function(state={cart_id:null, cart:[], total:null}, action){\n\tswitch(action.type){\n\n\n\tcase SETUP_CART:\n\t\treturn {...state, cart_id:action.payload};\n\n\tcase GET_CART:\n\t\treturn {...state, cart:action.payload}\n\n\tcase GET_CART_TOTAL:\n\t\treturn {...state, total:action.payload}\n\n\tcase EMPTY_CART:\n\t\treturn {...state, cart:[]}\n\n\n\tcase UPDATE_CART:\n\t\tlet updatedCart = []\n\t\tlet hash = {}\n\n\t\tlet updateCart = action.payload\n\t\tlet existingCart = state.cart\n\n\t\tfor(let i=0; i<existingCart.length; i++){\n\t\t\tlet item = Object.assign({}, existingCart[i]);\n\t\t\thash[item.item_id] = item\n\t\t}\n\n\t\tfor(let i=0; i<updateCart.length; i++){\n\t\t\tlet item = updateCart[i]\n\t\t\tif(hash[item.item_id]){\n\t\t\t\titem.image = hash[item.item_id].image || ''\n\t\t\t}\n\t\t\tupdatedCart.push(item)\n\t\t}\n\n\t\treturn {...state, cart:updatedCart}\n\n\t\n\n\n\tdefault:\n\t\treturn state;\n\t}\n}"]},"metadata":{},"sourceType":"module"}