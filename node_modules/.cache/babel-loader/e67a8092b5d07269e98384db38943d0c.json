{"ast":null,"code":"import { GET_PRODUCTS, GET_PRODUCT, GET_PRODUCT_REVIEWS, GET_PRODUCT_ATTRIBUTES, GET_CATEGORIES, GET_DEPARTMENTS, SET_USER, CLEAR_USER, UPDATE_CUSTOMER, SET_AUTH_ERROR, CLEAR_AUTH_ERROR, SETUP_CART, GET_CART, GET_CART_TOTAL, EMPTY_CART, GET_SHIPPING_REGIONS, GET_SHIPPING_OPTIONS, GET_TAXES, SET_ORDER } from './types';\nimport axios from 'axios';\nconst ROOT_URL = 'https://backendapi.turing.com';\nexport function register(name, email, password) {\n  return async function (dispatch) {\n    try {\n      const user = await axios.post(ROOT_URL + '/customers', {\n        name: name,\n        email: email,\n        password: password\n      });\n      return dispatch(set_User(user.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          return dispatch(set_AuthError(error.response.data.error));\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function login(email, password) {\n  return async function (dispatch) {\n    try {\n      const user = await axios.post(ROOT_URL + '/customers/login', {\n        email: email,\n        password: password\n      });\n      return dispatch(set_User(user.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          return dispatch(set_AuthError(error.response.data.error));\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function set_AuthError(error) {\n  return {\n    type: SET_AUTH_ERROR,\n    payload: error\n  };\n}\nexport function set_User(user) {\n  return {\n    type: SET_USER,\n    payload: user\n  };\n}\nexport function clearAuthError() {\n  return {\n    type: CLEAR_AUTH_ERROR\n  };\n}\nexport function logout() {\n  return {\n    type: CLEAR_USER\n  };\n}\nexport function setupCart() {\n  return async function (dispatch) {\n    try {\n      const cart = await axios.get(ROOT_URL + '/shoppingcart/generateUniqueId');\n      let cartID = cart.data.cart_id;\n      return dispatch(setup_Cart(cartID));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function setup_Cart(cart) {\n  return {\n    type: SETUP_CART,\n    payload: cart\n  };\n}\nexport function getCart(cart_id) {\n  return async function (dispatch) {\n    try {\n      const cart = await axios.get(ROOT_URL + '/shoppingcart/' + cart_id);\n      return dispatch(get_Cart(cart.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function addToCart(cart_id, product_id, attributes) {\n  return async function (dispatch) {\n    try {\n      const cart = await axios.post(ROOT_URL + '/shoppingcart/add', {\n        cart_id: cart_id,\n        product_id: product_id,\n        attributes: attributes\n      });\n      dispatch(get_Cart(cart.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function get_Cart(cart) {\n  return {\n    type: GET_CART,\n    payload: cart\n  };\n}\nexport function emptyCart(cart_id) {\n  return async function (dispatch) {\n    try {\n      await axios.delete(ROOT_URL + '/shoppingcart/empty/' + cart_id);\n      return dispatch(empty_Cart());\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function empty_Cart() {\n  return {\n    type: EMPTY_CART\n  };\n}\nexport function getCartTotal(cart_id) {\n  return async function (dispatch) {\n    try {\n      const total = await axios.get(ROOT_URL + '/shoppingcart/totalAmount/' + cart_id);\n      return dispatch(get_CartTotal(total.data.total_amount));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function get_CartTotal(total) {\n  return {\n    type: GET_CART_TOTAL,\n    payload: total\n  };\n}\nexport function getProducts(page) {\n  return async function (dispatch) {\n    try {\n      //page - defauls to 1\n      //limit - defaults to 20\n      //description_length - defaults to 200\n      let parameter = \"\";\n\n      if (page) {\n        parameter = '/?page=' + page;\n      }\n\n      const products = await axios.get(ROOT_URL + '/products' + parameter);\n      return dispatch(get_Products(products.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function getProductsInDepartment(id, page) {\n  return async function (dispatch) {\n    try {\n      //page - defauls to 1\n      //limit - defaults to 20\n      //description_length - defaults to 200\n      let parameter = \"\";\n\n      if (page) {\n        parameter = '/?page=' + page;\n      }\n\n      const products = await axios.get(ROOT_URL + '/products/inDepartment/' + id + parameter);\n      return dispatch(get_Products(products.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function getProductsInCategory(id) {\n  return async function (dispatch) {\n    try {\n      //page - defauls to 1\n      //limit - defaults to 20\n      //description_length - defaults to 200\n      const products = await axios.get(ROOT_URL + '/products/inCategory/' + id);\n      return dispatch(get_Products(products.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function searchProducts(query) {\n  return async function (dispatch) {\n    try {\n      //query_string - to search\n      //all_words - all words on/off\n      //page - defauls to 1\n      //limit - defaults to 20\n      //description_length - defaults to 200\n      const products = await axios.get(ROOT_URL + \"/products/search?query_string=\" + query);\n      return dispatch(get_Products(products.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function get_Products(products) {\n  return {\n    type: GET_PRODUCTS,\n    payload: products\n  };\n}\nexport function getProduct(id) {\n  return async function (dispatch) {\n    try {\n      const product = await axios.get(ROOT_URL + '/products/' + id);\n      return dispatch(get_Product(product.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function get_Product(product) {\n  return {\n    type: GET_PRODUCT,\n    payload: product\n  };\n}\nexport function getProductReviews(id) {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      const product = await axios.get(ROOT_URL + '/products/' + id + '/reviews');\n      return dispatch(get_ProductReviews(product.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function get_ProductReviews(reviews) {\n  return {\n    type: GET_PRODUCT_REVIEWS,\n    payload: reviews\n  };\n}\nexport function getProductAttributes(id) {\n  return async function (dispatch) {\n    try {\n      const attributes = await axios.get(ROOT_URL + '/attributes/inProduct/' + id);\n      return dispatch(get_ProductAttributes(attributes.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function get_ProductAttributes(attributes) {\n  return {\n    type: GET_PRODUCT_ATTRIBUTES,\n    payload: attributes\n  };\n}\nexport function getCategories() {\n  return async function (dispatch) {\n    try {\n      //order - category_id or name\n      //page - defauls to 1\n      //limit - defaults to 20\n      const categories = await axios.get(ROOT_URL + '/categories'); //let count = categories.data.count\n\n      let rows = categories.data.rows;\n      return dispatch(get_Categories(rows));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function getDepartments() {\n  return async function (dispatch) {\n    try {\n      const departments = await axios.get(ROOT_URL + '/departments');\n      return dispatch(get_Departments(departments.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function get_Departments(departments) {\n  return {\n    type: GET_DEPARTMENTS,\n    payload: departments\n  };\n}\nexport function getCategoriesInDepartment(id) {\n  return async function (dispatch) {\n    try {\n      const categories = await axios.get(ROOT_URL + '/categories/inDepartment/' + id);\n      return dispatch(get_Categories(categories.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function get_Categories(categories) {\n  return {\n    type: GET_CATEGORIES,\n    payload: categories\n  };\n}\nexport function getShippingRegions() {\n  return async function (dispatch) {\n    try {\n      const regions = await axios.get(ROOT_URL + '/shipping/regions/');\n      return dispatch(get_ShippingRegions(regions.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function get_ShippingRegions(regions) {\n  return {\n    type: GET_SHIPPING_REGIONS,\n    payload: regions\n  };\n}\nexport function getShippingOptions(region_id) {\n  return async function (dispatch) {\n    try {\n      const options = await axios.get(ROOT_URL + '/shipping/regions/' + region_id);\n      return dispatch(get_ShippingOptions(options.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function get_ShippingOptions(options) {\n  return {\n    type: GET_SHIPPING_OPTIONS,\n    payload: options\n  };\n}\nexport function getTaxes() {\n  return async function (dispatch) {\n    try {\n      const taxes = await axios.get(ROOT_URL + '/tax');\n      return dispatch(get_Taxes(taxes.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function get_Taxes(taxes) {\n  return {\n    type: GET_TAXES,\n    payload: taxes\n  };\n}\nexport function createOrder(cart_id, shipping_id, tax_id, token) {\n  return async function (dispatch) {\n    try {\n      var headers = {\n        'user-key': token\n      };\n      let data = {\n        cart_id: cart_id,\n        shipping_id: shipping_id,\n        tax_id: tax_id\n      };\n      const order = await axios.post(ROOT_URL + '/orders', data, {\n        headers: headers\n      });\n      console.log('order', order);\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR', error.response.data);\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function updateCustomer(name, email, token) {\n  return async function (dispatch) {\n    try {\n      var headers = {\n        'user-key': token\n      };\n      let data = {\n        name: name,\n        email: email\n      };\n      const customer = await axios.put(ROOT_URL + '/customer', data, {\n        headers: headers\n      });\n      return dispatch(update_Customer(customer.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR', error.response.data);\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function update_Customer(customer) {\n  return {\n    type: UPDATE_CUSTOMER,\n    payload: customer\n  };\n} //NOT USED - UPDATE CUSTOMER ADDRESS\n// export function updateCustomerAddress(token){\n// \t//dispatch any actions with redux thunk\n// \treturn async function(dispatch){\n// \t\ttry {\n// \t\t\tvar headers = {\n// \t\t\t    'user-key': token, \n// \t\t\t}\n// \t\t\tlet data = {\n// \t\t\t\taddress_1:'test address1',\n// \t\t\t\taddress_2:'test address2',\n// \t\t\t\tcity:'test city',\n// \t\t\t\tregion:'test region',\n// \t\t\t\tpostal_code:'test postalcode',\n// \t\t\t\tcountry:'test country',\n// \t\t\t\tshipping_region_id:1\n// \t\t\t};\n// \t\t\tconst customer = await axios.put(ROOT_URL+'/customers/address', data, {headers:headers} );\n// \t\t\tconsole.log('customer', customer)\n// \t\t\treturn dispatch(update_Customer(customer.data));\n// \t\t} catch(error){\n// \t\t\t//If server returns error, show response\n// \t\t\tif(error.response){\n// \t\t\t\tif(error.response.data){\n// \t\t\t\t\tconsole.log('ERROR', error.response.data)\n// \t\t\t\t}\n// \t\t\t//For other types of error, just display error\n// \t\t\t} else if(error){\n// \t\t\t\tconsole.log('ERROR')\n// \t\t\t}\n// \t\t}\n// \t};\n// }\n\nexport function chargeStripe(stripeToken, order_id, description, amount, token) {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      var headers = {\n        'user-key': token\n      };\n      let data = {\n        stripeToken,\n        order_id,\n        description,\n        amount\n      };\n      const charge = await axios.post(ROOT_URL + '/stripe/charge', data, {\n        headers: headers\n      });\n      console.log('charge', charge);\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR', error.response.data);\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}","map":{"version":3,"sources":["/Users/josephkoon/Desktop/turing/src/actions/index.js"],"names":["GET_PRODUCTS","GET_PRODUCT","GET_PRODUCT_REVIEWS","GET_PRODUCT_ATTRIBUTES","GET_CATEGORIES","GET_DEPARTMENTS","SET_USER","CLEAR_USER","UPDATE_CUSTOMER","SET_AUTH_ERROR","CLEAR_AUTH_ERROR","SETUP_CART","GET_CART","GET_CART_TOTAL","EMPTY_CART","GET_SHIPPING_REGIONS","GET_SHIPPING_OPTIONS","GET_TAXES","SET_ORDER","axios","ROOT_URL","register","name","email","password","dispatch","user","post","set_User","data","error","response","set_AuthError","console","log","login","type","payload","clearAuthError","logout","setupCart","cart","get","cartID","cart_id","setup_Cart","getCart","get_Cart","addToCart","product_id","attributes","emptyCart","delete","empty_Cart","getCartTotal","total","get_CartTotal","total_amount","getProducts","page","parameter","products","get_Products","getProductsInDepartment","id","getProductsInCategory","searchProducts","query","getProduct","product","get_Product","getProductReviews","get_ProductReviews","reviews","getProductAttributes","get_ProductAttributes","getCategories","categories","rows","get_Categories","getDepartments","departments","get_Departments","getCategoriesInDepartment","getShippingRegions","regions","get_ShippingRegions","getShippingOptions","region_id","options","get_ShippingOptions","getTaxes","taxes","get_Taxes","createOrder","shipping_id","tax_id","token","headers","order","updateCustomer","customer","put","update_Customer","chargeStripe","stripeToken","order_id","description","amount","charge"],"mappings":"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","sourcesContent":["import {\n\tGET_PRODUCTS,\n\tGET_PRODUCT,\n\tGET_PRODUCT_REVIEWS,\n\tGET_PRODUCT_ATTRIBUTES,\n\n\tGET_CATEGORIES,\n\n\tGET_DEPARTMENTS,\n\n\tSET_USER,\n\tCLEAR_USER,\n\tUPDATE_CUSTOMER,\n\tSET_AUTH_ERROR,\n\tCLEAR_AUTH_ERROR,\n\n\tSETUP_CART,\n\tGET_CART,\n\tGET_CART_TOTAL,\n\tEMPTY_CART,\n\n\tGET_SHIPPING_REGIONS,\n\tGET_SHIPPING_OPTIONS,\n\tGET_TAXES,\n\n\tSET_ORDER,\n} from './types'\n\nimport axios from 'axios';\n\nconst ROOT_URL = 'https://backendapi.turing.com'\n\n\n\n\n\nexport function register(name, email, password){\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tconst user = await axios.post(ROOT_URL+'/customers', {name:name, email: email, password: password});\n\n\t\t\treturn dispatch(set_User(user.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\treturn dispatch(set_AuthError(error.response.data.error))\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\n\n\nexport function login(email, password){\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tconst user = await axios.post(ROOT_URL+'/customers/login', {email: email, password: password});\n\n\t\t\treturn dispatch(set_User(user.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\treturn dispatch(set_AuthError(error.response.data.error))\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport function set_AuthError(error){\n\treturn {\n\t\ttype:SET_AUTH_ERROR,\n\t\tpayload:error\n\t};\n}\n\nexport function set_User(user){\n\treturn {\n\t\ttype:SET_USER,\n\t\tpayload:user\n\t};\n}\n\nexport function clearAuthError(){\n\treturn {\n\t\ttype:CLEAR_AUTH_ERROR\n\t};\n}\n\nexport function logout(){\n\treturn {\n\t\ttype:CLEAR_USER,\n\t};\n}\n\n\n\n\n\nexport function setupCart(){\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tconst cart = await axios.get(ROOT_URL+'/shoppingcart/generateUniqueId');\n\n\t\t\tlet cartID = cart.data.cart_id\n\n\t\t\treturn dispatch(setup_Cart(cartID));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\t\n}\n\nexport function setup_Cart(cart){\n\treturn {\n\t\ttype:SETUP_CART,\n\t\tpayload:cart\n\t};\n}\n\n\n\n\nexport function getCart(cart_id){\n\treturn async function(dispatch){\n\t\ttry {\n\t\t\n\t\t\tconst cart = await axios.get(ROOT_URL+'/shoppingcart/'+cart_id);\n\n\t\t\treturn dispatch(get_Cart(cart.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\t\n}\n\n\nexport function addToCart(cart_id, product_id, attributes){\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tconst cart = await axios.post(ROOT_URL+'/shoppingcart/add', {cart_id:cart_id, product_id:product_id, attributes:attributes});\n\n\t\t\tdispatch(get_Cart(cart.data))\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\t\n}\n \nexport function get_Cart(cart){\n\treturn {\n\t\ttype:GET_CART,\n\t\tpayload:cart\n\t};\n}\n\n\n\nexport function emptyCart(cart_id){\n\treturn async function(dispatch){\n\t\ttry {\n\t\t\n\t\t\tawait axios.delete(ROOT_URL+'/shoppingcart/empty/'+cart_id);\n\n\t\t\treturn dispatch(empty_Cart());\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\t\n}\n \nexport function empty_Cart(){\n\treturn {\n\t\ttype:EMPTY_CART,\n\t};\n}\n\n\n\n\n\nexport function getCartTotal(cart_id){\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tconst total = await axios.get(ROOT_URL+'/shoppingcart/totalAmount/'+cart_id);\n\n\t\t\treturn dispatch(get_CartTotal(total.data.total_amount));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\t\n}\n\nexport function get_CartTotal(total){\n\treturn {\n\t\ttype:GET_CART_TOTAL,\n\t\tpayload:total\n\t};\n}\n\n\n\n\n\nexport function getProducts(page){\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\t//page - defauls to 1\n\t\t\t//limit - defaults to 20\n\t\t\t//description_length - defaults to 200\n\n\t\t\tlet parameter = \"\"\n\t\t\tif(page){\n\t\t\t\tparameter = '/?page=' + page\n\t\t\t}\n\n\t\t\tconst products = await axios.get(ROOT_URL+'/products' + parameter);\n\n\t\t\treturn dispatch(get_Products(products.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\n\n\nexport function getProductsInDepartment(id, page){\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\t//page - defauls to 1\n\t\t\t//limit - defaults to 20\n\t\t\t//description_length - defaults to 200\n\n\t\t\tlet parameter = \"\"\n\t\t\tif(page){\n\t\t\t\tparameter = '/?page=' + page\n\t\t\t}\n\n\t\t\tconst products = await axios.get(ROOT_URL+'/products/inDepartment/'+id + parameter);\n\n\t\t\treturn dispatch(get_Products(products.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\n\n\n\nexport function getProductsInCategory(id){\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\t//page - defauls to 1\n\t\t\t//limit - defaults to 20\n\t\t\t//description_length - defaults to 200\n\n\t\t\tconst products = await axios.get(ROOT_URL+'/products/inCategory/'+id);\n\n\t\t\treturn dispatch(get_Products(products.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\n\n\n\n\nexport function searchProducts(query){\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\t//query_string - to search\n\t\t\t//all_words - all words on/off\n\t\t\t//page - defauls to 1\n\t\t\t//limit - defaults to 20\n\t\t\t//description_length - defaults to 200\n\n\t\t\tconst products = await axios.get(ROOT_URL+\"/products/search?query_string=\" + query);\n\n\t\t\treturn dispatch(get_Products(products.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport function get_Products(products){\n\treturn {\n\t\ttype:GET_PRODUCTS,\n\t\tpayload:products\n\t};\n}\n\n\n\n\n\n\n\nexport function getProduct(id){\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tconst product = await axios.get(ROOT_URL+'/products/'+id);\n\n\t\t\treturn dispatch(get_Product(product.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport function get_Product(product){\n\treturn {\n\t\ttype:GET_PRODUCT,\n\t\tpayload:product\n\t};\n}\n\n\n\n\nexport function getProductReviews(id){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tconst product = await axios.get(ROOT_URL+'/products/'+id+'/reviews');\n\n\t\t\treturn dispatch(get_ProductReviews(product.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport function get_ProductReviews(reviews){\n\treturn {\n\t\ttype:GET_PRODUCT_REVIEWS,\n\t\tpayload:reviews\n\t};\n}\n\n\n\nexport function getProductAttributes(id){\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tconst attributes = await axios.get(ROOT_URL+'/attributes/inProduct/'+id);\n\n\t\t\treturn dispatch(get_ProductAttributes(attributes.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport function get_ProductAttributes(attributes){\n\treturn {\n\t\ttype:GET_PRODUCT_ATTRIBUTES,\n\t\tpayload:attributes\n\t};\n}\n\n\n\n\n\n\n\nexport function getCategories(){\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\t//order - category_id or name\n\t\t\t//page - defauls to 1\n\t\t\t//limit - defaults to 20\n\n\t\t\tconst categories = await axios.get(ROOT_URL+'/categories');\n\n\t\t\t//let count = categories.data.count\n\t\t\tlet rows = categories.data.rows\n\n\t\t\treturn dispatch(get_Categories(rows));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\n\n\n\n\nexport function getDepartments(){\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tconst departments = await axios.get(ROOT_URL+'/departments');\n\n\t\t\treturn dispatch(get_Departments(departments.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport function get_Departments(departments){\n\treturn {\n\t\ttype:GET_DEPARTMENTS,\n\t\tpayload:departments\n\t};\n}\n\n\nexport function getCategoriesInDepartment(id){\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tconst categories = await axios.get(ROOT_URL+'/categories/inDepartment/'+id);\n\n\t\t\treturn dispatch(get_Categories(categories.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport function get_Categories(categories){\n\treturn {\n\t\ttype:GET_CATEGORIES,\n\t\tpayload:categories\n\t};\n}\n\n\n\n\n\n\nexport function getShippingRegions(){\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tconst regions = await axios.get(ROOT_URL+'/shipping/regions/');\n\n\t\t\treturn dispatch(get_ShippingRegions(regions.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport function get_ShippingRegions(regions){\n\treturn {\n\t\ttype:GET_SHIPPING_REGIONS,\n\t\tpayload:regions\n\t};\n}\n\n\n\n\nexport function getShippingOptions(region_id){\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tconst options = await axios.get(ROOT_URL+'/shipping/regions/'+region_id);\n\n\t\t\treturn dispatch(get_ShippingOptions(options.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport function get_ShippingOptions(options){\n\treturn {\n\t\ttype:GET_SHIPPING_OPTIONS,\n\t\tpayload:options\n\t};\n}\n\n\n\n\n\n\n\nexport function getTaxes(){\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tconst taxes = await axios.get(ROOT_URL+'/tax');\n\n\t\t\treturn dispatch(get_Taxes(taxes.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport function get_Taxes(taxes){\n\treturn {\n\t\ttype:GET_TAXES,\n\t\tpayload:taxes\n\t};\n}\n\n\n\n\n\nexport function createOrder(cart_id, shipping_id, tax_id, token){\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tvar headers = {\n\t\t\t    'user-key': token, \n\t\t\t}\n\n\t\t\tlet data = {\n\t\t\t\tcart_id:cart_id, \n\t\t\t\tshipping_id:shipping_id, \n\t\t\t\ttax_id:tax_id\n\t\t\t};\n\n\t\t\tconst order = await axios.post(ROOT_URL+'/orders', data, {headers:headers} );\n\n\t\t\tconsole.log('order', order)\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR', error.response.data)\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\n\n\n\nexport function updateCustomer(name, email, token){\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tvar headers = {\n\t\t\t    'user-key': token, \n\t\t\t}\n\n\t\t\tlet data = {\n\t\t\t\tname:name,\n\t\t\t\temail:email,\n\t\t\t};\n\n\t\t\tconst customer = await axios.put(ROOT_URL+'/customer', data, {headers:headers} );\n\n\t\t\treturn dispatch(update_Customer(customer.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR', error.response.data)\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport function update_Customer(customer){\n\treturn {\n\t\ttype:UPDATE_CUSTOMER,\n\t\tpayload:customer\n\t};\n}\n\n\n//NOT USED - UPDATE CUSTOMER ADDRESS\n// export function updateCustomerAddress(token){\n// \t//dispatch any actions with redux thunk\n// \treturn async function(dispatch){\n// \t\ttry {\n\n// \t\t\tvar headers = {\n// \t\t\t    'user-key': token, \n// \t\t\t}\n\n// \t\t\tlet data = {\n// \t\t\t\taddress_1:'test address1',\n// \t\t\t\taddress_2:'test address2',\n// \t\t\t\tcity:'test city',\n// \t\t\t\tregion:'test region',\n// \t\t\t\tpostal_code:'test postalcode',\n// \t\t\t\tcountry:'test country',\n// \t\t\t\tshipping_region_id:1\n// \t\t\t};\n\n// \t\t\tconst customer = await axios.put(ROOT_URL+'/customers/address', data, {headers:headers} );\n\n// \t\t\tconsole.log('customer', customer)\n// \t\t\treturn dispatch(update_Customer(customer.data));\n\n// \t\t} catch(error){\n// \t\t\t//If server returns error, show response\n// \t\t\tif(error.response){\n// \t\t\t\tif(error.response.data){\n// \t\t\t\t\tconsole.log('ERROR', error.response.data)\n// \t\t\t\t}\n// \t\t\t//For other types of error, just display error\n// \t\t\t} else if(error){\n// \t\t\t\tconsole.log('ERROR')\n// \t\t\t}\n// \t\t}\n// \t};\n// }\n\n\n\n\n\n\nexport function chargeStripe(stripeToken, order_id, description, amount, token){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tvar headers = {\n\t\t\t    'user-key': token, \n\t\t\t}\n\n\t\t\tlet data = {\n\t\t\t\tstripeToken,\n\t\t\t\torder_id,\n\t\t\t\tdescription,\n\t\t\t\tamount,\n\t\t\t};\n\n\t\t\tconst charge = await axios.post(ROOT_URL+'/stripe/charge', data, {headers:headers} );\n\n\t\t\tconsole.log('charge', charge)\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR', error.response.data)\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}