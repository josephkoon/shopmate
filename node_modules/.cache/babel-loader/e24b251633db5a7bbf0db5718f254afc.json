{"ast":null,"code":"var _jsxFileName = \"/Users/josephkoon/Desktop/turing/src/CheckoutForm.js\";\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport './actions/index';\nvar stripe = window.Stripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\nvar elements = stripe.elements();\n\nclass CheckoutForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      token: null\n    };\n  }\n\n  componentDidMount() {\n    var style = {\n      base: {\n        // Add your base input styles here. For example:\n        fontSize: '16px',\n        color: \"#32325d\"\n      }\n    }; // Create an instance of the card Element.\n\n    var card = elements.create('card', {\n      style: style\n    }); // Add an instance of the card Element into the `card-element` <div>.\n\n    card.mount('#card-element'); //Display Errors\n\n    card.addEventListener('change', function (event) {\n      var displayError = document.getElementById('card-errors');\n\n      if (event.error) {\n        displayError.textContent = event.error.message;\n      } else {\n        displayError.textContent = '';\n      }\n    }); //Listen for Submit\n\n    var form = document.getElementById('payment-form');\n    form.addEventListener('submit', function (event) {\n      event.preventDefault();\n      stripe.createToken(card).then(function (result) {\n        if (result.error) {\n          // Inform the customer that there was an error.\n          console.log('result', result.error);\n          var errorElement = document.getElementById('card-errors');\n          errorElement.textContent = result.error.message;\n        } else {\n          // Send the token to your server.\n          console.log(result.token); //this.stripeTokenHandler(result.token);\n\n          this.setState({\n            token: result.token\n          });\n        }\n      }.bind(this));\n    }.bind(this));\n  } // stripeTokenHandler(token) {\n  //   // Insert the token ID into the form so it gets submitted to the server\n  //   // var form = document.getElementById('payment-form');\n  //   // var hiddenInput = document.createElement('input');\n  //   // hiddenInput.setAttribute('type', 'hidden');\n  //   // hiddenInput.setAttribute('name', 'stripeToken');\n  //   // hiddenInput.setAttribute('value', token.id);\n  //   // form.appendChild(hiddenInput);\n  //   // // Submit the form\n  //   // form.submit();\n  // }\n\n\n  render() {\n    console.log(this.state.token);\n    return React.createElement(\"form\", {\n      action: \"/charge\",\n      method: \"post\",\n      id: \"payment-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-control\",\n      id: \"card-element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"card-errors\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Submit Payment\"));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({}, dispatch);\n};\n\nCheckoutForm = connect(mapStateToProps, mapDispatchToProps)(CheckoutForm);\nexport default withRouter(CheckoutForm);","map":{"version":3,"sources":["/Users/josephkoon/Desktop/turing/src/CheckoutForm.js"],"names":["React","Component","bindActionCreators","connect","withRouter","stripe","window","Stripe","elements","CheckoutForm","constructor","state","token","componentDidMount","style","base","fontSize","color","card","create","mount","addEventListener","event","displayError","document","getElementById","error","textContent","message","form","preventDefault","createToken","then","result","console","log","errorElement","setState","bind","render","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux'; \nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport { \n\n} from './actions/index';\n\n\nvar stripe = window.Stripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\nvar elements = stripe.elements();\n\n\nclass CheckoutForm extends Component {\n\tconstructor(){\n\t\tsuper()\n\n\t\tthis.state = {\n\t\t\ttoken:null,\n\t\t}\n\t}\n\n\n\n\n\tcomponentDidMount(){\n\n\t\tvar style = {\n\t\t  base: {\n\t\t    // Add your base input styles here. For example:\n\t\t    fontSize: '16px',\n\t\t    color: \"#32325d\",\n\t\t  }\n\t\t};\n\t\t// Create an instance of the card Element.\n\t\tvar card = elements.create('card', {style: style});\n\t\t// Add an instance of the card Element into the `card-element` <div>.\n\t\tcard.mount('#card-element');\n\n\n\n\t\t//Display Errors\n\t\tcard.addEventListener('change', function(event) {\n\t\t\tvar displayError = document.getElementById('card-errors');\n\t\t\tif (event.error) {\n\t\t\t\tdisplayError.textContent = event.error.message;\n\t\t\t} else {\n\t\t\t\tdisplayError.textContent = '';\n\t\t\t}\n\t\t});\n\n\n\n\t\t//Listen for Submit\n\t\tvar form = document.getElementById('payment-form');\n\t\tform.addEventListener('submit', function(event) {\n\t\t\tevent.preventDefault();\n\n\t\t\tstripe.createToken(card).then(function(result) {\n\t\t\t\tif (result.error) {\n\t\t\t\t\t// Inform the customer that there was an error.\n\t\t\t\t\tconsole.log('result', result.error)\n\t\t\t\t\tvar errorElement = document.getElementById('card-errors');\n\t\t\t\t\terrorElement.textContent = result.error.message;\n\t\t\t\t} else {\n\t\t\t\t\t// Send the token to your server.\n\t\t\t\t\tconsole.log(result.token)\n\t\t\t\t\t//this.stripeTokenHandler(result.token);\n\t\t\t\t\tthis.setState({token:result.token})\n\t\t\t\t}\n\t\t\t}.bind(this));\n\t\t}.bind(this));\n\n\n\t}\n\n\n\n\t// stripeTokenHandler(token) {\n\t//   // Insert the token ID into the form so it gets submitted to the server\n\t//   // var form = document.getElementById('payment-form');\n\t//   // var hiddenInput = document.createElement('input');\n\t//   // hiddenInput.setAttribute('type', 'hidden');\n\t//   // hiddenInput.setAttribute('name', 'stripeToken');\n\t//   // hiddenInput.setAttribute('value', token.id);\n\t//   // form.appendChild(hiddenInput);\n\n\t//   // // Submit the form\n\t//   // form.submit();\n\t// }\n\n\n\n\n\trender(){\n\n\t\tconsole.log(this.state.token)\n\t\t\n\t\treturn(\n\t\t\t<form action=\"/charge\" method=\"post\" id=\"payment-form\">\n\n\t\t\t  <div>\n\t\t\t    <div className='form-control' id=\"card-element\">\n\t\t\t    </div>\n\n\t\t\t    <div id=\"card-errors\" role=\"alert\"></div>\n\t\t\t  </div>\n\n\t\t\t  <button>Submit Payment</button>\n\t\t\t</form>\n\t\t)\n\t}\n}\n\n\n\nfunction mapStateToProps(state){\n\treturn { \t\n\n\t};\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn bindActionCreators({\n\n\t}, dispatch);\n};\n\nCheckoutForm = connect(mapStateToProps, mapDispatchToProps)(CheckoutForm);\nexport default withRouter(CheckoutForm);\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}