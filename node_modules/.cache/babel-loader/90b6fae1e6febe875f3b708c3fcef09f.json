{"ast":null,"code":"import { GET_PRODUCTS, GET_PRODUCT, GET_PRODUCT_REVIEWS, GET_PRODUCT_ATTRIBUTES, SEARCH_PRODUCTS, GET_CATEGORIES, GET_DEPARTMENTS, SET_REGISTRATION_ERROR, SET_LOGIN_ERROR, SET_USER, SETUP_CART, GET_CART, GET_CART_TOTAL, ADD_TO_CART, REMOVE_FROM_CART } from './types';\nimport axios from 'axios';\n\nconst Querystring = require('query-string');\n\nconst ROOT_URL = 'https://backendapi.turing.com';\nexport function setupCart() {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      const cart = await axios.get(ROOT_URL + '/shoppingcart/generateUniqueId');\n      let cartID = cart.data.cart_id;\n      return dispatch(setup_Cart(cartID));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function setup_Cart(cart) {\n  return {\n    type: SETUP_CART,\n    payload: cart\n  };\n}\nexport function getCart(cart_id) {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      const cart = await axios.get(ROOT_URL + '/shoppingcart/' + cart_id);\n      return dispatch(get_Cart(cart.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function addToCart(cart_id, product_id, attributes) {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      const cart = await axios.post(ROOT_URL + '/shoppingcart/add', {\n        cart_id: cart_id,\n        product_id: product_id,\n        attributes: attributes\n      });\n      console.log('getting new cart', cart.data);\n      dispatch(get_Cart(cart.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function get_Cart(cart) {\n  console.log('get cart', cart);\n  return {\n    type: GET_CART,\n    payload: cart\n  };\n}\nexport function getCartTotal(cart_id) {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      const total = await axios.get(ROOT_URL + '/shoppingcart/totalAmount/' + cart_id);\n      return dispatch(get_CartTotal(total.data.total_amount));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function get_CartTotal(total) {\n  return {\n    type: GET_CART_TOTAL,\n    payload: total\n  };\n}\nexport function register(name, email, password) {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      const user = await axios.post(ROOT_URL + '/customers', {\n        name: name,\n        email: email,\n        password: password\n      });\n      console.log('user', user);\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          return dispatch(set_RegistrationError(error.response.data.error));\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function set_RegistrationError(error) {\n  return {\n    type: SET_REGISTRATION_ERROR,\n    payload: error\n  };\n}\nexport function login(email, password) {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      const user = await axios.post(ROOT_URL + '/customers/login', {\n        email: email,\n        password: password\n      });\n      return dispatch(set_User(user.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          return dispatch(set_LoginError(error.response.data.error));\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function set_User(user) {\n  return {\n    type: SET_USER,\n    payload: user\n  };\n}\nexport function set_LoginError(error) {\n  return {\n    type: SET_LOGIN_ERROR,\n    payload: error\n  };\n}\nexport function getProducts() {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      //page - defauls to 1\n      //limit - defaults to 20\n      //description_length - defaults to 200\n      const products = await axios.get(ROOT_URL + '/products');\n      let count = products.data.count;\n      let rows = products.data.rows;\n      return dispatch(get_Products(rows));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function getProductsInDepartment(id) {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      //page - defauls to 1\n      //limit - defaults to 20\n      //description_length - defaults to 200\n      const products = await axios.get(ROOT_URL + '/products/inDepartment/' + id);\n      let count = products.data.count;\n      let rows = products.data.rows;\n      return dispatch(get_Products(rows));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function getProductsInCategory(id) {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      //page - defauls to 1\n      //limit - defaults to 20\n      //description_length - defaults to 200\n      const products = await axios.get(ROOT_URL + '/products/inCategory/' + id);\n      let count = products.data.count;\n      let rows = products.data.rows;\n      return dispatch(get_Products(rows));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function get_Products(products) {\n  return {\n    type: GET_PRODUCTS,\n    payload: products\n  };\n}\nexport function getProduct(id) {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      const product = await axios.get(ROOT_URL + '/products/' + id);\n      return dispatch(get_Product(product.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function get_Product(product) {\n  return {\n    type: GET_PRODUCT,\n    payload: product\n  };\n}\nexport function getProductReviews(id) {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      const product = await axios.get(ROOT_URL + '/products/' + id + '/reviews');\n      return dispatch(get_ProductReviews(product.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function get_ProductReviews(reviews) {\n  return {\n    type: GET_PRODUCT_REVIEWS,\n    payload: reviews\n  };\n}\nexport function getProductAttributes(id) {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      const attributes = await axios.get(ROOT_URL + '/attributes/inProduct/' + id);\n      return dispatch(get_ProductAttributes(attributes.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function get_ProductAttributes(attributes) {\n  return {\n    type: GET_PRODUCT_ATTRIBUTES,\n    payload: attributes\n  };\n}\nexport function searchProducts(query) {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      //query_string - to search\n      //all_words - all words on/off\n      //page - defauls to 1\n      //limit - defaults to 20\n      //description_length - defaults to 200\n      const products = await axios.get(ROOT_URL + '/products/search' + \"?query_string=\" + query);\n      return dispatch(search_Products(products.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function search_Products(products) {\n  return {\n    type: SEARCH_PRODUCTS,\n    payload: products\n  };\n}\nexport function getCategories() {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      //order - category_id or name\n      //page - defauls to 1\n      //limit - defaults to 20\n      const categories = await axios.get(ROOT_URL + '/categories');\n      let count = categories.data.count;\n      let rows = categories.data.rows;\n      return dispatch(get_Categories(rows));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function getCategoriesInDepartment(id) {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      const categories = await axios.get(ROOT_URL + '/categories/inDepartment/' + id);\n      return dispatch(get_Categories(categories.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function get_Categories(categories) {\n  return {\n    type: GET_CATEGORIES,\n    payload: categories\n  };\n}\nexport function getDepartments() {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      const departments = await axios.get(ROOT_URL + '/departments');\n      return dispatch(get_Departments(departments.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function get_Departments(departments) {\n  return {\n    type: GET_DEPARTMENTS,\n    payload: departments\n  };\n}","map":{"version":3,"sources":["/Users/josephkoon/Desktop/turing/src/actions/index.js"],"names":["GET_PRODUCTS","GET_PRODUCT","GET_PRODUCT_REVIEWS","GET_PRODUCT_ATTRIBUTES","SEARCH_PRODUCTS","GET_CATEGORIES","GET_DEPARTMENTS","SET_REGISTRATION_ERROR","SET_LOGIN_ERROR","SET_USER","SETUP_CART","GET_CART","GET_CART_TOTAL","ADD_TO_CART","REMOVE_FROM_CART","axios","Querystring","require","ROOT_URL","setupCart","dispatch","cart","get","cartID","data","cart_id","setup_Cart","error","response","console","log","type","payload","getCart","get_Cart","addToCart","product_id","attributes","post","getCartTotal","total","get_CartTotal","total_amount","register","name","email","password","user","set_RegistrationError","login","set_User","set_LoginError","getProducts","products","count","rows","get_Products","getProductsInDepartment","id","getProductsInCategory","getProduct","product","get_Product","getProductReviews","get_ProductReviews","reviews","getProductAttributes","get_ProductAttributes","searchProducts","query","search_Products","getCategories","categories","get_Categories","getCategoriesInDepartment","getDepartments","departments","get_Departments"],"mappings":"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","sourcesContent":["import {\n\tGET_PRODUCTS,\n\tGET_PRODUCT,\n\tGET_PRODUCT_REVIEWS,\n\tGET_PRODUCT_ATTRIBUTES,\n\tSEARCH_PRODUCTS,\n\n\tGET_CATEGORIES,\n\n\tGET_DEPARTMENTS,\n\n\tSET_REGISTRATION_ERROR,\n\tSET_LOGIN_ERROR,\n\n\tSET_USER,\n\n\tSETUP_CART,\n\tGET_CART,\n\tGET_CART_TOTAL,\n\tADD_TO_CART,\n\tREMOVE_FROM_CART,\n} from './types'\n\nimport axios from 'axios';\n\nconst Querystring = require('query-string');\nconst ROOT_URL = 'https://backendapi.turing.com'\n\n\n\n\n\n\nexport function setupCart(){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tconst cart = await axios.get(ROOT_URL+'/shoppingcart/generateUniqueId');\n\n\t\t\tlet cartID = cart.data.cart_id\n\n\t\t\treturn dispatch(setup_Cart(cartID));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\t\n}\n\nexport function setup_Cart(cart){\n\treturn {\n\t\ttype:SETUP_CART,\n\t\tpayload:cart\n\t};\n}\n\n\n\n\n\n\nexport function getCart(cart_id){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tconst cart = await axios.get(ROOT_URL+'/shoppingcart/'+cart_id);\n\n\t\t\treturn dispatch(get_Cart(cart.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\t\n}\n\n\nexport function addToCart(cart_id, product_id, attributes){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tconst cart = await axios.post(ROOT_URL+'/shoppingcart/add', {cart_id:cart_id, product_id:product_id, attributes:attributes});\n\n\t\t\tconsole.log('getting new cart', cart.data)\n\n\t\t\tdispatch(get_Cart(cart.data))\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\t\n}\n\nexport function get_Cart(cart){\n\tconsole.log('get cart', cart)\n\treturn {\n\t\ttype:GET_CART,\n\t\tpayload:cart\n\t};\n}\n\n\n\n\n\n\n\n\nexport function getCartTotal(cart_id){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tconst total = await axios.get(ROOT_URL+'/shoppingcart/totalAmount/'+cart_id);\n\n\t\t\treturn dispatch(get_CartTotal(total.data.total_amount));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\t\n}\n\nexport function get_CartTotal(total){\n\treturn {\n\t\ttype:GET_CART_TOTAL,\n\t\tpayload:total\n\t};\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport function register(name, email, password){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\n\t\t\tconst user = await axios.post(ROOT_URL+'/customers', {name:name, email: email, password: password});\n\n\t\t\tconsole.log('user', user)\n\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\treturn dispatch(set_RegistrationError(error.response.data.error))\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport function set_RegistrationError(error){\n\treturn {\n\t\ttype:SET_REGISTRATION_ERROR,\n\t\tpayload:error\n\t};\n}\n\n\n\n\n\n\n\nexport function login(email, password){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tconst user = await axios.post(ROOT_URL+'/customers/login', {email: email, password: password});\n\n\t\t\treturn dispatch(set_User(user.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\treturn dispatch(set_LoginError(error.response.data.error))\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport function set_User(user){\n\treturn {\n\t\ttype:SET_USER,\n\t\tpayload:user\n\t};\n}\n\nexport function set_LoginError(error){\n\treturn {\n\t\ttype:SET_LOGIN_ERROR,\n\t\tpayload:error\n\t};\n}\n\n\n\n\n\n\n\nexport function getProducts(){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\t//page - defauls to 1\n\t\t\t//limit - defaults to 20\n\t\t\t//description_length - defaults to 200\n\n\t\t\tconst products = await axios.get(ROOT_URL+'/products');\n\n\t\t\tlet count = products.data.count\n\t\t\tlet rows = products.data.rows\n\n\t\t\treturn dispatch(get_Products(rows));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\n\n\n\n\n\nexport function getProductsInDepartment(id){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\t//page - defauls to 1\n\t\t\t//limit - defaults to 20\n\t\t\t//description_length - defaults to 200\n\n\t\t\tconst products = await axios.get(ROOT_URL+'/products/inDepartment/'+id);\n\n\t\t\tlet count = products.data.count\n\t\t\tlet rows = products.data.rows\n\n\t\t\treturn dispatch(get_Products(rows));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\n\n\n\n\n\n\nexport function getProductsInCategory(id){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\t//page - defauls to 1\n\t\t\t//limit - defaults to 20\n\t\t\t//description_length - defaults to 200\n\n\t\t\tconst products = await axios.get(ROOT_URL+'/products/inCategory/'+id);\n\n\t\t\tlet count = products.data.count\n\t\t\tlet rows = products.data.rows\n\n\t\t\treturn dispatch(get_Products(rows));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport function get_Products(products){\n\treturn {\n\t\ttype:GET_PRODUCTS,\n\t\tpayload:products\n\t};\n}\n\n\n\n\n\n\nexport function getProduct(id){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tconst product = await axios.get(ROOT_URL+'/products/'+id);\n\n\t\t\treturn dispatch(get_Product(product.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport function get_Product(product){\n\treturn {\n\t\ttype:GET_PRODUCT,\n\t\tpayload:product\n\t};\n}\n\n\n\n\n\n\nexport function getProductReviews(id){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tconst product = await axios.get(ROOT_URL+'/products/'+id+'/reviews');\n\n\t\t\treturn dispatch(get_ProductReviews(product.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport function get_ProductReviews(reviews){\n\treturn {\n\t\ttype:GET_PRODUCT_REVIEWS,\n\t\tpayload:reviews\n\t};\n}\n\n\n\n\n\n\n\nexport function getProductAttributes(id){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tconst attributes = await axios.get(ROOT_URL+'/attributes/inProduct/'+id);\n\n\t\t\treturn dispatch(get_ProductAttributes(attributes.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport function get_ProductAttributes(attributes){\n\treturn {\n\t\ttype:GET_PRODUCT_ATTRIBUTES,\n\t\tpayload:attributes\n\t};\n}\n\n\n\n\n\nexport function searchProducts(query){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\t//query_string - to search\n\t\t\t//all_words - all words on/off\n\t\t\t//page - defauls to 1\n\t\t\t//limit - defaults to 20\n\t\t\t//description_length - defaults to 200\n\n\t\t\tconst products = await axios.get(ROOT_URL+'/products/search' + \"?query_string=\" + query);\n\n\t\t\treturn dispatch(search_Products(products.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport function search_Products(products){\n\treturn {\n\t\ttype:SEARCH_PRODUCTS,\n\t\tpayload:products\n\t};\n}\n\n\n\n\n\n\nexport function getCategories(){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\t//order - category_id or name\n\t\t\t//page - defauls to 1\n\t\t\t//limit - defaults to 20\n\n\t\t\tconst categories = await axios.get(ROOT_URL+'/categories');\n\n\t\t\tlet count = categories.data.count\n\t\t\tlet rows = categories.data.rows\n\n\t\t\treturn dispatch(get_Categories(rows));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\n\n\n\n\n\nexport function getCategoriesInDepartment(id){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tconst categories = await axios.get(ROOT_URL+'/categories/inDepartment/'+id);\n\n\t\t\treturn dispatch(get_Categories(categories.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport function get_Categories(categories){\n\treturn {\n\t\ttype:GET_CATEGORIES,\n\t\tpayload:categories\n\t};\n}\n\n\n\n\n\n\n\nexport function getDepartments(){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tconst departments = await axios.get(ROOT_URL+'/departments');\n\n\t\t\treturn dispatch(get_Departments(departments.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport function get_Departments(departments){\n\treturn {\n\t\ttype:GET_DEPARTMENTS,\n\t\tpayload:departments\n\t};\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}