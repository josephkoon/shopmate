{"ast":null,"code":"import { GET_PRODUCTS, SEARCH_PRODUCTS, GET_CATEGORIES, GET_DEPARTMENTS, GET_ATTRIBUTES } from './types';\nimport axios from 'axios';\nconst ROOT_URL = 'https://backendapi.turing.com';\nexport function getProducts() {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      //page - defauls to 1\n      //limit - defaults to 20\n      //description_length - defaults to 200\n      const products = await axios.get(ROOT_URL + '/products');\n      console.log(products);\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function searchProducts(query) {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      //query_string - to search\n      //all_words - all words on/off\n      //page - defauls to 1\n      //limit - defaults to 20\n      //description_length - defaults to 200\n      const products = await axios.get(ROOT_URL + '/products/search' + \"?query_string=\" + query);\n      console.log(products);\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function getCategories() {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      //order - category_id or name\n      //page - defauls to 1\n      //limit - defaults to 20\n      const categories = await axios.get(ROOT_URL + '/categories');\n      console.log(categories);\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function getDepartments() {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      const departments = await axios.get(ROOT_URL + '/departments');\n      console.log(departments);\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function getAttributes() {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      const attributes = await axios.get(ROOT_URL + '/attributes');\n      console.log(attributes);\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}","map":{"version":3,"sources":["/Users/josephkoon/Desktop/turing/src/actions/index.js"],"names":["GET_PRODUCTS","SEARCH_PRODUCTS","GET_CATEGORIES","GET_DEPARTMENTS","GET_ATTRIBUTES","axios","ROOT_URL","getProducts","dispatch","products","get","console","log","error","response","data","searchProducts","query","getCategories","categories","getDepartments","departments","getAttributes","attributes"],"mappings":"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","sourcesContent":["import {\n\tGET_PRODUCTS,\n\tSEARCH_PRODUCTS,\n\n\tGET_CATEGORIES,\n\n\tGET_DEPARTMENTS,\n\n\tGET_ATTRIBUTES,\n\n\n} from './types'\n\nimport axios from 'axios';\n\n\n\nconst ROOT_URL = 'https://backendapi.turing.com'\n\n\n\n\n\n\nexport function getProducts(){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\t//page - defauls to 1\n\t\t\t//limit - defaults to 20\n\t\t\t//description_length - defaults to 200\n\n\t\t\tconst products = await axios.get(ROOT_URL+'/products');\n\n\t\t\tconsole.log(products)\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\n\n\nexport function searchProducts(query){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\t//query_string - to search\n\t\t\t//all_words - all words on/off\n\t\t\t//page - defauls to 1\n\t\t\t//limit - defaults to 20\n\t\t\t//description_length - defaults to 200\n\n\t\t\tconst products = await axios.get(ROOT_URL+'/products/search' + \"?query_string=\" + query);\n\n\t\t\tconsole.log(products)\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\n\n\n\nexport function getCategories(){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\t//order - category_id or name\n\t\t\t//page - defauls to 1\n\t\t\t//limit - defaults to 20\n\n\t\t\tconst categories = await axios.get(ROOT_URL+'/categories');\n\n\t\t\tconsole.log(categories)\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\n\n\n\n\n\n\nexport function getDepartments(){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tconst departments = await axios.get(ROOT_URL+'/departments');\n\n\t\t\tconsole.log(departments)\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\n\n\n\n\nexport function getAttributes(){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tconst attributes = await axios.get(ROOT_URL+'/attributes');\n\n\t\t\tconsole.log(attributes)\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}