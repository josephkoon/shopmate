{"ast":null,"code":"import { GET_PRODUCTS, GET_PRODUCT, GET_PRODUCT_REVIEWS, GET_PRODUCT_ATTRIBUTES, SEARCH_PRODUCTS, GET_CATEGORIES, GET_DEPARTMENTS } from './types';\nimport axios from 'axios';\n\nconst Querystring = require('query-string');\n\nconst ROOT_URL = 'https://backendapi.turing.com';\nexport function login(email, password) {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      //page - defauls to 1\n      //limit - defaults to 20\n      //description_length - defaults to 200\n      var data = Querystring.stringify({\n        'email': email,\n        'password': password\n      });\n      consoel.log(data);\n      const user = await axios.post(ROOT_URL + '/customer/login', data, {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      });\n      console.log('user', user); // let count = products.data.count\n      // let rows = products.data.rows\n      // return dispatch(get_Products(rows));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function getProducts() {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      //page - defauls to 1\n      //limit - defaults to 20\n      //description_length - defaults to 200\n      const products = await axios.get(ROOT_URL + '/products');\n      let count = products.data.count;\n      let rows = products.data.rows;\n      return dispatch(get_Products(rows));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function getProductsInDepartment(id) {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      //page - defauls to 1\n      //limit - defaults to 20\n      //description_length - defaults to 200\n      const products = await axios.get(ROOT_URL + '/products/inDepartment/' + id);\n      let count = products.data.count;\n      let rows = products.data.rows;\n      return dispatch(get_Products(rows));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function getProductsInCategory(id) {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      //page - defauls to 1\n      //limit - defaults to 20\n      //description_length - defaults to 200\n      const products = await axios.get(ROOT_URL + '/products/inCategory/' + id);\n      let count = products.data.count;\n      let rows = products.data.rows;\n      return dispatch(get_Products(rows));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function get_Products(products) {\n  return {\n    type: GET_PRODUCTS,\n    payload: products\n  };\n}\nexport function getProduct(id) {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      const product = await axios.get(ROOT_URL + '/products/' + id);\n      return dispatch(get_Product(product.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function get_Product(product) {\n  return {\n    type: GET_PRODUCT,\n    payload: product\n  };\n}\nexport function getProductReviews(id) {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      const product = await axios.get(ROOT_URL + '/products/' + id + '/reviews');\n      return dispatch(get_ProductReviews(product.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function get_ProductReviews(reviews) {\n  return {\n    type: GET_PRODUCT_REVIEWS,\n    payload: reviews\n  };\n}\nexport function getProductAttributes(id) {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      const attributes = await axios.get(ROOT_URL + '/attributes/inProduct/' + id);\n      return dispatch(get_ProductAttributes(attributes.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function get_ProductAttributes(attributes) {\n  return {\n    type: GET_PRODUCT_ATTRIBUTES,\n    payload: attributes\n  };\n}\nexport function searchProducts(query) {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      //query_string - to search\n      //all_words - all words on/off\n      //page - defauls to 1\n      //limit - defaults to 20\n      //description_length - defaults to 200\n      const products = await axios.get(ROOT_URL + '/products/search' + \"?query_string=\" + query);\n      return dispatch(search_Products(products.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function search_Products(products) {\n  return {\n    type: SEARCH_PRODUCTS,\n    payload: products\n  };\n}\nexport function getCategories() {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      //order - category_id or name\n      //page - defauls to 1\n      //limit - defaults to 20\n      const categories = await axios.get(ROOT_URL + '/categories');\n      let count = categories.data.count;\n      let rows = categories.data.rows;\n      return dispatch(get_Categories(rows));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function getCategoriesInDepartment(id) {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      const categories = await axios.get(ROOT_URL + '/categories/inDepartment/' + id);\n      return dispatch(get_Categories(categories.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function get_Categories(categories) {\n  return {\n    type: GET_CATEGORIES,\n    payload: categories\n  };\n}\nexport function getDepartments() {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      const departments = await axios.get(ROOT_URL + '/departments');\n      return dispatch(get_Departments(departments.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function get_Departments(departments) {\n  console.log('departments', departments);\n  return {\n    type: GET_DEPARTMENTS,\n    payload: departments\n  };\n}","map":{"version":3,"sources":["/Users/josephkoon/Desktop/turing/src/actions/index.js"],"names":["GET_PRODUCTS","GET_PRODUCT","GET_PRODUCT_REVIEWS","GET_PRODUCT_ATTRIBUTES","SEARCH_PRODUCTS","GET_CATEGORIES","GET_DEPARTMENTS","axios","Querystring","require","ROOT_URL","login","email","password","dispatch","data","stringify","consoel","log","user","post","headers","console","error","response","getProducts","products","get","count","rows","get_Products","getProductsInDepartment","id","getProductsInCategory","type","payload","getProduct","product","get_Product","getProductReviews","get_ProductReviews","reviews","getProductAttributes","attributes","get_ProductAttributes","searchProducts","query","search_Products","getCategories","categories","get_Categories","getCategoriesInDepartment","getDepartments","departments","get_Departments"],"mappings":"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","sourcesContent":["import {\n\tGET_PRODUCTS,\n\tGET_PRODUCT,\n\tGET_PRODUCT_REVIEWS,\n\tGET_PRODUCT_ATTRIBUTES,\n\t\n\tSEARCH_PRODUCTS,\n\n\tGET_CATEGORIES,\n\n\tGET_DEPARTMENTS,\n} from './types'\n\nimport axios from 'axios';\n\nconst Querystring = require('query-string');\n\nconst ROOT_URL = 'https://backendapi.turing.com'\n\n\n\n\n\n\nexport function login(email, password){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\t//page - defauls to 1\n\t\t\t//limit - defaults to 20\n\t\t\t//description_length - defaults to 200\n\n\n\t\t\tvar data = Querystring.stringify({ \n\t\t\t\t'email':email,\n\t\t\t\t'password':password,\n\t\t\t});\n\n\t\t\tconsoel.log(data)\n\n\n\t\t\tconst user = await axios.post(ROOT_URL+'/customer/login', data, {headers:{'Content-Type':'application/x-www-form-urlencoded'}});\n\n\t\t\tconsole.log('user', user)\n\n\t\t\t// let count = products.data.count\n\t\t\t// let rows = products.data.rows\n\n\t\t\t// return dispatch(get_Products(rows));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\n\n\n\n\n\nexport function getProducts(){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\t//page - defauls to 1\n\t\t\t//limit - defaults to 20\n\t\t\t//description_length - defaults to 200\n\n\t\t\tconst products = await axios.get(ROOT_URL+'/products');\n\n\t\t\tlet count = products.data.count\n\t\t\tlet rows = products.data.rows\n\n\t\t\treturn dispatch(get_Products(rows));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\n\n\n\nexport function getProductsInDepartment(id){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\t//page - defauls to 1\n\t\t\t//limit - defaults to 20\n\t\t\t//description_length - defaults to 200\n\n\t\t\tconst products = await axios.get(ROOT_URL+'/products/inDepartment/'+id);\n\n\t\t\tlet count = products.data.count\n\t\t\tlet rows = products.data.rows\n\n\t\t\treturn dispatch(get_Products(rows));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\n\n\nexport function getProductsInCategory(id){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\t//page - defauls to 1\n\t\t\t//limit - defaults to 20\n\t\t\t//description_length - defaults to 200\n\n\t\t\tconst products = await axios.get(ROOT_URL+'/products/inCategory/'+id);\n\n\t\t\tlet count = products.data.count\n\t\t\tlet rows = products.data.rows\n\n\t\t\treturn dispatch(get_Products(rows));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\n\n\n\n\nexport function get_Products(products){\n\treturn {\n\t\ttype:GET_PRODUCTS,\n\t\tpayload:products\n\t};\n}\n\n\n\n\n\n\n\n\nexport function getProduct(id){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tconst product = await axios.get(ROOT_URL+'/products/'+id);\n\n\t\t\treturn dispatch(get_Product(product.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport function get_Product(product){\n\treturn {\n\t\ttype:GET_PRODUCT,\n\t\tpayload:product\n\t};\n}\n\n\n\n\nexport function getProductReviews(id){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tconst product = await axios.get(ROOT_URL+'/products/'+id+'/reviews');\n\n\t\t\treturn dispatch(get_ProductReviews(product.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport function get_ProductReviews(reviews){\n\treturn {\n\t\ttype:GET_PRODUCT_REVIEWS,\n\t\tpayload:reviews\n\t};\n}\n\n\n\n\n\nexport function getProductAttributes(id){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tconst attributes = await axios.get(ROOT_URL+'/attributes/inProduct/'+id);\n\n\t\t\treturn dispatch(get_ProductAttributes(attributes.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport function get_ProductAttributes(attributes){\n\treturn {\n\t\ttype:GET_PRODUCT_ATTRIBUTES,\n\t\tpayload:attributes\n\t};\n}\n\n\n\n\n\n\n\nexport function searchProducts(query){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\t//query_string - to search\n\t\t\t//all_words - all words on/off\n\t\t\t//page - defauls to 1\n\t\t\t//limit - defaults to 20\n\t\t\t//description_length - defaults to 200\n\n\t\t\tconst products = await axios.get(ROOT_URL+'/products/search' + \"?query_string=\" + query);\n\n\t\t\treturn dispatch(search_Products(products.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport function search_Products(products){\n\treturn {\n\t\ttype:SEARCH_PRODUCTS,\n\t\tpayload:products\n\t};\n}\n\n\n\n\n\n\n\n\nexport function getCategories(){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\t//order - category_id or name\n\t\t\t//page - defauls to 1\n\t\t\t//limit - defaults to 20\n\n\t\t\tconst categories = await axios.get(ROOT_URL+'/categories');\n\n\t\t\tlet count = categories.data.count\n\t\t\tlet rows = categories.data.rows\n\n\t\t\treturn dispatch(get_Categories(rows));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\n\nexport function getCategoriesInDepartment(id){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tconst categories = await axios.get(ROOT_URL+'/categories/inDepartment/'+id);\n\n\t\t\treturn dispatch(get_Categories(categories.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\n\nexport function get_Categories(categories){\n\treturn {\n\t\ttype:GET_CATEGORIES,\n\t\tpayload:categories\n\t};\n}\n\n\n\n\n\n\n\n\n\n\nexport function getDepartments(){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tconst departments = await axios.get(ROOT_URL+'/departments');\n\n\t\t\treturn dispatch(get_Departments(departments.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport function get_Departments(departments){\n\tconsole.log('departments', departments)\n\treturn {\n\t\ttype:GET_DEPARTMENTS,\n\t\tpayload:departments\n\t};\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}