{"ast":null,"code":"import { GET_PRODUCTS, GET_PRODUCT, GET_PRODUCT_REVIEWS, GET_PRODUCT_ATTRIBUTES, SEARCH_PRODUCTS, GET_CATEGORIES, GET_DEPARTMENTS, SET_REGISTRATION_ERROR, SET_LOGIN_ERROR, SET_USER, CLEAR_USER, UPDATE_CUSTOMER, SETUP_CART, GET_CART, GET_CART_TOTAL, EMPTY_CART, GET_SHIPPING_REGIONS, GET_SHIPPING_OPTIONS, GET_TAXES } from './types';\nimport axios from 'axios';\nconst ROOT_URL = 'https://backendapi.turing.com';\nexport function register(name, email, password) {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      const user = await axios.post(ROOT_URL + '/customers', {\n        name: name,\n        email: email,\n        password: password\n      });\n      return dispatch(set_User(user.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          return dispatch(set_RegistrationError(error.response.data.error));\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function set_RegistrationError(error) {\n  return {\n    type: SET_REGISTRATION_ERROR,\n    payload: error\n  };\n}\nexport function login(email, password) {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      const user = await axios.post(ROOT_URL + '/customers/login', {\n        email: email,\n        password: password\n      });\n      return dispatch(set_User(user.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          return dispatch(set_LoginError(error.response.data.error));\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function set_User(user) {\n  return {\n    type: SET_USER,\n    payload: user\n  };\n}\nexport function set_LoginError(error) {\n  return {\n    type: SET_LOGIN_ERROR,\n    payload: error\n  };\n}\nexport function logout() {\n  return {\n    type: CLEAR_USER\n  };\n}\nexport function setupCart() {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      const cart = await axios.get(ROOT_URL + '/shoppingcart/generateUniqueId');\n      let cartID = cart.data.cart_id;\n      return dispatch(setup_Cart(cartID));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function setup_Cart(cart) {\n  return {\n    type: SETUP_CART,\n    payload: cart\n  };\n}\nexport function getCart(cart_id) {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      const cart = await axios.get(ROOT_URL + '/shoppingcart/' + cart_id);\n      console.log('cart', cart.data);\n      return dispatch(get_Cart(cart.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function addToCart(cart_id, product_id, attributes) {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      const cart = await axios.post(ROOT_URL + '/shoppingcart/add', {\n        cart_id: cart_id,\n        product_id: product_id,\n        attributes: attributes\n      });\n      dispatch(get_Cart(cart.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function get_Cart(cart) {\n  return {\n    type: GET_CART,\n    payload: cart\n  };\n}\nexport function emptyCart(cart_id) {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      await axios.delete(ROOT_URL + '/shoppingcart/empty/' + cart_id);\n      return dispatch(empty_Cart());\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function empty_Cart() {\n  return {\n    type: EMPTY_CART\n  };\n}\nexport function getCartTotal(cart_id) {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      const total = await axios.get(ROOT_URL + '/shoppingcart/totalAmount/' + cart_id);\n      return dispatch(get_CartTotal(total.data.total_amount));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function get_CartTotal(total) {\n  return {\n    type: GET_CART_TOTAL,\n    payload: total\n  };\n}\nexport function getProducts() {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      //page - defauls to 1\n      //limit - defaults to 20\n      //description_length - defaults to 200\n      const products = await axios.get(ROOT_URL + '/products'); //let count = products.data.count\n      //let rows = products.data.rows\n\n      return dispatch(get_Products(products.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function getProductsInDepartment(id, page) {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      //page - defauls to 1\n      //limit - defaults to 20\n      //description_length - defaults to 200\n      const products = await axios.get(ROOT_URL + '/products/inDepartment/' + id); //let count = products.data.count\n      //let rows = products.data.rows\n\n      return dispatch(get_Products(products.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function getProductsInCategory(id) {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      //page - defauls to 1\n      //limit - defaults to 20\n      //description_length - defaults to 200\n      const products = await axios.get(ROOT_URL + '/products/inCategory/' + id); //let count = products.data.count\n      //let rows = products.data.rows\n\n      return dispatch(get_Products(products.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function get_Products(products) {\n  return {\n    type: GET_PRODUCTS,\n    payload: products\n  };\n}\nexport function searchProducts(query) {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      //query_string - to search\n      //all_words - all words on/off\n      //page - defauls to 1\n      //limit - defaults to 20\n      //description_length - defaults to 200\n      const products = await axios.get(ROOT_URL + \"/products/search?query_string=\" + query);\n      console.log('products', products);\n      return dispatch(get_Products(products.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function getProduct(id) {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      const product = await axios.get(ROOT_URL + '/products/' + id);\n      return dispatch(get_Product(product.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function get_Product(product) {\n  return {\n    type: GET_PRODUCT,\n    payload: product\n  };\n}\nexport function getProductReviews(id) {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      const product = await axios.get(ROOT_URL + '/products/' + id + '/reviews');\n      return dispatch(get_ProductReviews(product.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function get_ProductReviews(reviews) {\n  return {\n    type: GET_PRODUCT_REVIEWS,\n    payload: reviews\n  };\n}\nexport function getProductAttributes(id) {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      const attributes = await axios.get(ROOT_URL + '/attributes/inProduct/' + id);\n      return dispatch(get_ProductAttributes(attributes.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function get_ProductAttributes(attributes) {\n  return {\n    type: GET_PRODUCT_ATTRIBUTES,\n    payload: attributes\n  };\n}\nexport function getCategories() {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      //order - category_id or name\n      //page - defauls to 1\n      //limit - defaults to 20\n      const categories = await axios.get(ROOT_URL + '/categories'); //let count = categories.data.count\n\n      let rows = categories.data.rows;\n      return dispatch(get_Categories(rows));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function getDepartments() {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      const departments = await axios.get(ROOT_URL + '/departments');\n      return dispatch(get_Departments(departments.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function get_Departments(departments) {\n  return {\n    type: GET_DEPARTMENTS,\n    payload: departments\n  };\n}\nexport function getCategoriesInDepartment(id) {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      const categories = await axios.get(ROOT_URL + '/categories/inDepartment/' + id);\n      return dispatch(get_Categories(categories.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function get_Categories(categories) {\n  return {\n    type: GET_CATEGORIES,\n    payload: categories\n  };\n}\nexport function getShippingRegions() {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      const regions = await axios.get(ROOT_URL + '/shipping/regions/');\n      console.log(regions);\n      return dispatch(get_ShippingRegions(regions.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function get_ShippingRegions(regions) {\n  return {\n    type: GET_SHIPPING_REGIONS,\n    payload: regions\n  };\n}\nexport function getShippingOptions(region_id) {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      const options = await axios.get(ROOT_URL + '/shipping/regions/' + region_id);\n      return dispatch(get_ShippingOptions(options.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function get_ShippingOptions(options) {\n  return {\n    type: GET_SHIPPING_OPTIONS,\n    payload: options\n  };\n}\nexport function getTaxes() {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      const taxes = await axios.get(ROOT_URL + '/tax');\n      return dispatch(get_Taxes(taxes.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function get_Taxes(taxes) {\n  return {\n    type: GET_TAXES,\n    payload: taxes\n  };\n}\nexport function createOrder(cart_id, shipping_id, tax_id, token) {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      var headers = {\n        'user-key': token\n      };\n      let data = {\n        cart_id: cart_id,\n        shipping_id: shipping_id,\n        tax_id: tax_id\n      };\n      const order = await axios.post(ROOT_URL + '/orders', data, {\n        headers: headers\n      });\n      console.log('order', order);\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR', error.response.data);\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function updateCustomer(name, email, token) {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      var headers = {\n        'user-key': token\n      };\n      let data = {\n        name: name,\n        email: email\n      };\n      const customer = await axios.put(ROOT_URL + '/customer', data, {\n        headers: headers\n      });\n      return dispatch(update_Customer(customer.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR', error.response.data);\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function updateCustomerAddress(token) {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      var headers = {\n        'user-key': token\n      };\n      let data = {\n        address_1: 'test address1',\n        address_2: 'test address2',\n        city: 'test city',\n        region: 'test region',\n        postal_code: 'test postalcode',\n        country: 'test country',\n        shipping_region_id: 1\n      };\n      const customer = await axios.put(ROOT_URL + '/customers/address', data, {\n        headers: headers\n      });\n      console.log('customer', customer);\n      return dispatch(update_Customer(customer.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR', error.response.data);\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function update_Customer(customer) {\n  return {\n    type: UPDATE_CUSTOMER,\n    payload: customer\n  };\n}","map":{"version":3,"sources":["/Users/josephkoon/Desktop/turing/src/actions/index.js"],"names":["GET_PRODUCTS","GET_PRODUCT","GET_PRODUCT_REVIEWS","GET_PRODUCT_ATTRIBUTES","SEARCH_PRODUCTS","GET_CATEGORIES","GET_DEPARTMENTS","SET_REGISTRATION_ERROR","SET_LOGIN_ERROR","SET_USER","CLEAR_USER","UPDATE_CUSTOMER","SETUP_CART","GET_CART","GET_CART_TOTAL","EMPTY_CART","GET_SHIPPING_REGIONS","GET_SHIPPING_OPTIONS","GET_TAXES","axios","ROOT_URL","register","name","email","password","dispatch","user","post","set_User","data","error","response","set_RegistrationError","console","log","type","payload","login","set_LoginError","logout","setupCart","cart","get","cartID","cart_id","setup_Cart","getCart","get_Cart","addToCart","product_id","attributes","emptyCart","delete","empty_Cart","getCartTotal","total","get_CartTotal","total_amount","getProducts","products","get_Products","getProductsInDepartment","id","page","getProductsInCategory","searchProducts","query","getProduct","product","get_Product","getProductReviews","get_ProductReviews","reviews","getProductAttributes","get_ProductAttributes","getCategories","categories","rows","get_Categories","getDepartments","departments","get_Departments","getCategoriesInDepartment","getShippingRegions","regions","get_ShippingRegions","getShippingOptions","region_id","options","get_ShippingOptions","getTaxes","taxes","get_Taxes","createOrder","shipping_id","tax_id","token","headers","order","updateCustomer","customer","put","update_Customer","updateCustomerAddress","address_1","address_2","city","region","postal_code","country","shipping_region_id"],"mappings":"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","sourcesContent":["import {\n\tGET_PRODUCTS,\n\tGET_PRODUCT,\n\tGET_PRODUCT_REVIEWS,\n\tGET_PRODUCT_ATTRIBUTES,\n\tSEARCH_PRODUCTS,\n\n\tGET_CATEGORIES,\n\n\tGET_DEPARTMENTS,\n\n\tSET_REGISTRATION_ERROR,\n\tSET_LOGIN_ERROR,\n\n\tSET_USER,\n\tCLEAR_USER,\n\tUPDATE_CUSTOMER,\n\n\tSETUP_CART,\n\tGET_CART,\n\tGET_CART_TOTAL,\n\tEMPTY_CART,\n\n\tGET_SHIPPING_REGIONS,\n\tGET_SHIPPING_OPTIONS,\n\tGET_TAXES,\n} from './types'\n\nimport axios from 'axios';\n\nconst ROOT_URL = 'https://backendapi.turing.com'\n\n\n\n\n\nexport function register(name, email, password){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tconst user = await axios.post(ROOT_URL+'/customers', {name:name, email: email, password: password});\n\n\t\t\treturn dispatch(set_User(user.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\treturn dispatch(set_RegistrationError(error.response.data.error))\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\nexport function set_RegistrationError(error){\n\treturn {\n\t\ttype:SET_REGISTRATION_ERROR,\n\t\tpayload:error\n\t};\n}\n\n\n\nexport function login(email, password){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tconst user = await axios.post(ROOT_URL+'/customers/login', {email: email, password: password});\n\n\t\t\treturn dispatch(set_User(user.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\treturn dispatch(set_LoginError(error.response.data.error))\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\nexport function set_User(user){\n\treturn {\n\t\ttype:SET_USER,\n\t\tpayload:user\n\t};\n}\nexport function set_LoginError(error){\n\treturn {\n\t\ttype:SET_LOGIN_ERROR,\n\t\tpayload:error\n\t};\n}\n\n\n\nexport function logout(){\n\treturn {\n\t\ttype:CLEAR_USER,\n\t};\n}\n\n\n\n\n\n\n\n\n\nexport function setupCart(){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tconst cart = await axios.get(ROOT_URL+'/shoppingcart/generateUniqueId');\n\n\t\t\tlet cartID = cart.data.cart_id\n\n\t\t\treturn dispatch(setup_Cart(cartID));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\t\n}\nexport function setup_Cart(cart){\n\treturn {\n\t\ttype:SETUP_CART,\n\t\tpayload:cart\n\t};\n}\n\n\n\n\n\nexport function getCart(cart_id){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\t\t\n\t\t\tconst cart = await axios.get(ROOT_URL+'/shoppingcart/'+cart_id);\n\n\t\t\tconsole.log('cart', cart.data)\n\n\t\t\treturn dispatch(get_Cart(cart.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\t\n}\n\n\nexport function addToCart(cart_id, product_id, attributes){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tconst cart = await axios.post(ROOT_URL+'/shoppingcart/add', {cart_id:cart_id, product_id:product_id, attributes:attributes});\n\n\t\t\tdispatch(get_Cart(cart.data))\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\t\n}\n \nexport function get_Cart(cart){\n\treturn {\n\t\ttype:GET_CART,\n\t\tpayload:cart\n\t};\n}\n\n\n\n\n\nexport function emptyCart(cart_id){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\t\t\n\t\t\tawait axios.delete(ROOT_URL+'/shoppingcart/empty/'+cart_id);\n\n\t\t\treturn dispatch(empty_Cart());\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\t\n}\n \nexport function empty_Cart(){\n\treturn {\n\t\ttype:EMPTY_CART,\n\t};\n}\n\n\n\n\n\n\n\n\n\n\n\nexport function getCartTotal(cart_id){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tconst total = await axios.get(ROOT_URL+'/shoppingcart/totalAmount/'+cart_id);\n\n\t\t\treturn dispatch(get_CartTotal(total.data.total_amount));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\t\n}\nexport function get_CartTotal(total){\n\treturn {\n\t\ttype:GET_CART_TOTAL,\n\t\tpayload:total\n\t};\n}\n\n\n\n\n\n\n\nexport function getProducts(){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\t//page - defauls to 1\n\t\t\t//limit - defaults to 20\n\t\t\t//description_length - defaults to 200\n\n\t\t\tconst products = await axios.get(ROOT_URL+'/products');\n\n\t\t\t//let count = products.data.count\n\t\t\t//let rows = products.data.rows\n\n\t\t\treturn dispatch(get_Products(products.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\n\n\n\nexport function getProductsInDepartment(id, page){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\t//page - defauls to 1\n\t\t\t//limit - defaults to 20\n\t\t\t//description_length - defaults to 200\n\n\t\t\tconst products = await axios.get(ROOT_URL+'/products/inDepartment/'+id);\n\n\t\t\t//let count = products.data.count\n\t\t\t//let rows = products.data.rows\n\n\t\t\treturn dispatch(get_Products(products.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\n\n\n\nexport function getProductsInCategory(id){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\t//page - defauls to 1\n\t\t\t//limit - defaults to 20\n\t\t\t//description_length - defaults to 200\n\n\t\t\tconst products = await axios.get(ROOT_URL+'/products/inCategory/'+id);\n\n\t\t\t//let count = products.data.count\n\t\t\t//let rows = products.data.rows\n\n\t\t\treturn dispatch(get_Products(products.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport function get_Products(products){\n\treturn {\n\t\ttype:GET_PRODUCTS,\n\t\tpayload:products\n\t};\n}\n\n\n\n\nexport function searchProducts(query){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\t//query_string - to search\n\t\t\t//all_words - all words on/off\n\t\t\t//page - defauls to 1\n\t\t\t//limit - defaults to 20\n\t\t\t//description_length - defaults to 200\n\n\t\t\tconst products = await axios.get(ROOT_URL+\"/products/search?query_string=\" + query);\n\n\t\t\tconsole.log('products', products)\n\n\t\t\treturn dispatch(get_Products(products.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\n\n\n\n\n\n\n\n\n\nexport function getProduct(id){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tconst product = await axios.get(ROOT_URL+'/products/'+id);\n\n\t\t\treturn dispatch(get_Product(product.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport function get_Product(product){\n\treturn {\n\t\ttype:GET_PRODUCT,\n\t\tpayload:product\n\t};\n}\n\n\n\n\nexport function getProductReviews(id){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tconst product = await axios.get(ROOT_URL+'/products/'+id+'/reviews');\n\n\t\t\treturn dispatch(get_ProductReviews(product.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport function get_ProductReviews(reviews){\n\treturn {\n\t\ttype:GET_PRODUCT_REVIEWS,\n\t\tpayload:reviews\n\t};\n}\n\n\n\nexport function getProductAttributes(id){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tconst attributes = await axios.get(ROOT_URL+'/attributes/inProduct/'+id);\n\n\t\t\treturn dispatch(get_ProductAttributes(attributes.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport function get_ProductAttributes(attributes){\n\treturn {\n\t\ttype:GET_PRODUCT_ATTRIBUTES,\n\t\tpayload:attributes\n\t};\n}\n\n\n\n\n\n\n\n\n\n\n\nexport function getCategories(){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\t//order - category_id or name\n\t\t\t//page - defauls to 1\n\t\t\t//limit - defaults to 20\n\n\t\t\tconst categories = await axios.get(ROOT_URL+'/categories');\n\n\t\t\t//let count = categories.data.count\n\t\t\tlet rows = categories.data.rows\n\n\t\t\treturn dispatch(get_Categories(rows));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\n\n\n\n\nexport function getDepartments(){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tconst departments = await axios.get(ROOT_URL+'/departments');\n\n\t\t\treturn dispatch(get_Departments(departments.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport function get_Departments(departments){\n\treturn {\n\t\ttype:GET_DEPARTMENTS,\n\t\tpayload:departments\n\t};\n}\n\n\nexport function getCategoriesInDepartment(id){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tconst categories = await axios.get(ROOT_URL+'/categories/inDepartment/'+id);\n\n\t\t\treturn dispatch(get_Categories(categories.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport function get_Categories(categories){\n\treturn {\n\t\ttype:GET_CATEGORIES,\n\t\tpayload:categories\n\t};\n}\n\n\n\n\n\n\n\nexport function getShippingRegions(){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tconst regions = await axios.get(ROOT_URL+'/shipping/regions/');\n\n\t\t\tconsole.log(regions)\n\n\t\t\treturn dispatch(get_ShippingRegions(regions.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport function get_ShippingRegions(regions){\n\treturn {\n\t\ttype:GET_SHIPPING_REGIONS,\n\t\tpayload:regions\n\t};\n}\n\n\n\n\nexport function getShippingOptions(region_id){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tconst options = await axios.get(ROOT_URL+'/shipping/regions/'+region_id);\n\n\t\t\treturn dispatch(get_ShippingOptions(options.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport function get_ShippingOptions(options){\n\treturn {\n\t\ttype:GET_SHIPPING_OPTIONS,\n\t\tpayload:options\n\t};\n}\n\n\n\n\n\n\n\nexport function getTaxes(){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tconst taxes = await axios.get(ROOT_URL+'/tax');\n\n\t\t\treturn dispatch(get_Taxes(taxes.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport function get_Taxes(taxes){\n\treturn {\n\t\ttype:GET_TAXES,\n\t\tpayload:taxes\n\t};\n}\n\n\n\n\n\nexport function createOrder(cart_id, shipping_id, tax_id, token){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tvar headers = {\n\t\t\t    'user-key': token, \n\t\t\t}\n\n\t\t\tlet data = {\n\t\t\t\tcart_id:cart_id, \n\t\t\t\tshipping_id:shipping_id, \n\t\t\t\ttax_id:tax_id\n\t\t\t};\n\n\t\t\tconst order = await axios.post(ROOT_URL+'/orders', data, {headers:headers} );\n\n\t\t\tconsole.log('order', order)\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR', error.response.data)\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\n\n\n\n\n\nexport function updateCustomer(name, email, token){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tvar headers = {\n\t\t\t    'user-key': token, \n\t\t\t}\n\n\t\t\tlet data = {\n\t\t\t\tname:name,\n\t\t\t\temail:email,\n\t\t\t};\n\n\t\t\tconst customer = await axios.put(ROOT_URL+'/customer', data, {headers:headers} );\n\n\t\t\treturn dispatch(update_Customer(customer.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR', error.response.data)\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\n\n\nexport function updateCustomerAddress(token){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tvar headers = {\n\t\t\t    'user-key': token, \n\t\t\t}\n\n\t\t\tlet data = {\n\t\t\t\taddress_1:'test address1',\n\t\t\t\taddress_2:'test address2',\n\t\t\t\tcity:'test city',\n\t\t\t\tregion:'test region',\n\t\t\t\tpostal_code:'test postalcode',\n\t\t\t\tcountry:'test country',\n\t\t\t\tshipping_region_id:1\n\t\t\t};\n\n\t\t\tconst customer = await axios.put(ROOT_URL+'/customers/address', data, {headers:headers} );\n\n\t\t\tconsole.log('customer', customer)\n\t\t\treturn dispatch(update_Customer(customer.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR', error.response.data)\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\n\nexport function update_Customer(customer){\n\treturn {\n\t\ttype:UPDATE_CUSTOMER,\n\t\tpayload:customer\n\t};\n}\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}