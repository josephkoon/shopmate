{"ast":null,"code":"import { GET_PRODUCTS, SEARCH_PRODUCTS, GET_CATEGORIES, GET_DEPARTMENTS, GET_ATTRIBUTES } from './types';\nimport axios from 'axios';\nconst ROOT_URL = 'https://backendapi.turing.com';\nexport function getProducts() {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      //page - defauls to 1\n      //limit - defaults to 20\n      //description_length - defaults to 200\n      const products = await axios.get(ROOT_URL + '/products');\n      return dispatch(get_Products(products.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function get_Products(products) {\n  return {\n    type: GET_PRODUCTS,\n    payload: products\n  };\n}\nexport function searchProducts(query) {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      //query_string - to search\n      //all_words - all words on/off\n      //page - defauls to 1\n      //limit - defaults to 20\n      //description_length - defaults to 200\n      const products = await axios.get(ROOT_URL + '/products/search' + \"?query_string=\" + query);\n      return dispatch(search_Products(products.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function search_Products(products) {\n  return {\n    type: SEARCH_PRODUCTS,\n    payload: products\n  };\n}\nexport function getCategories() {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      //order - category_id or name\n      //page - defauls to 1\n      //limit - defaults to 20\n      const categories = await axios.get(ROOT_URL + '/categories');\n      return dispatch(get_Categories(categories.data));\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function get_Categories(categories) {\n  return {\n    type: GET_CATEGORIES,\n    payload: categories\n  };\n}\nexport function getDepartments() {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      const departments = await axios.get(ROOT_URL + '/departments');\n      console.log('departments', departments);\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}\nexport function getAttributes() {\n  //dispatch any actions with redux thunk\n  return async function (dispatch) {\n    try {\n      const attributes = await axios.get(ROOT_URL + '/attributes');\n      console.log('attributes', attributes);\n    } catch (error) {\n      //If server returns error, show response\n      if (error.response) {\n        if (error.response.data) {\n          console.log('ERROR');\n        } //For other types of error, just display error\n\n      } else if (error) {\n        console.log('ERROR');\n      }\n    }\n  };\n}","map":{"version":3,"sources":["/Users/josephkoon/Desktop/turing/src/actions/index.js"],"names":["GET_PRODUCTS","SEARCH_PRODUCTS","GET_CATEGORIES","GET_DEPARTMENTS","GET_ATTRIBUTES","axios","ROOT_URL","getProducts","dispatch","products","get","get_Products","data","error","response","console","log","type","payload","searchProducts","query","search_Products","getCategories","categories","get_Categories","getDepartments","departments","getAttributes","attributes"],"mappings":"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","sourcesContent":["import {\n\tGET_PRODUCTS,\n\tSEARCH_PRODUCTS,\n\n\tGET_CATEGORIES,\n\n\tGET_DEPARTMENTS,\n\n\tGET_ATTRIBUTES,\n} from './types'\n\n\nimport axios from 'axios';\n\nconst ROOT_URL = 'https://backendapi.turing.com'\n\n\n\n\n\n\nexport function getProducts(){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\t//page - defauls to 1\n\t\t\t//limit - defaults to 20\n\t\t\t//description_length - defaults to 200\n\n\t\t\tconst products = await axios.get(ROOT_URL+'/products');\n\n\t\t\treturn dispatch(get_Products(products.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport function get_Products(products){\n\treturn {\n\t\ttype:GET_PRODUCTS,\n\t\tpayload:products\n\t};\n}\n\n\n\n\nexport function searchProducts(query){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\t//query_string - to search\n\t\t\t//all_words - all words on/off\n\t\t\t//page - defauls to 1\n\t\t\t//limit - defaults to 20\n\t\t\t//description_length - defaults to 200\n\n\t\t\tconst products = await axios.get(ROOT_URL+'/products/search' + \"?query_string=\" + query);\n\n\t\t\treturn dispatch(search_Products(products.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport function search_Products(products){\n\treturn {\n\t\ttype:SEARCH_PRODUCTS,\n\t\tpayload:products\n\t};\n}\n\n\n\n\n\nexport function getCategories(){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\t//order - category_id or name\n\t\t\t//page - defauls to 1\n\t\t\t//limit - defaults to 20\n\n\t\t\tconst categories = await axios.get(ROOT_URL+'/categories');\n\n\t\t\treturn dispatch(get_Categories(categories.data));\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport function get_Categories(categories){\n\treturn {\n\t\ttype:GET_CATEGORIES,\n\t\tpayload:categories\n\t};\n}\n\n\n\n\n\n\nexport function getDepartments(){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tconst departments = await axios.get(ROOT_URL+'/departments');\n\n\t\t\tconsole.log('departments', departments)\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\n\n\n\n\nexport function getAttributes(){\n\t//dispatch any actions with redux thunk\n\treturn async function(dispatch){\n\t\ttry {\n\n\t\t\tconst attributes = await axios.get(ROOT_URL+'/attributes');\n\n\t\t\tconsole.log('attributes', attributes)\n\n\t\t} catch(error){\n\t\t\t//If server returns error, show response\n\t\t\tif(error.response){\n\t\t\t\tif(error.response.data){\n\t\t\t\t\tconsole.log('ERROR')\n\t\t\t\t}\n\t\t\t//For other types of error, just display error\n\t\t\t} else if(error){\n\t\t\t\tconsole.log('ERROR')\n\t\t\t}\n\t\t}\n\t};\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}